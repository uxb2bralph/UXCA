#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ContractHome.Models.DataEntity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DigitalContract")]
	public partial class DCDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 擴充性方法定義
    partial void OnCreated();
    partial void InsertCDS_Document(CDS_Document instance);
    partial void UpdateCDS_Document(CDS_Document instance);
    partial void DeleteCDS_Document(CDS_Document instance);
    partial void InsertContract(Contract instance);
    partial void UpdateContract(Contract instance);
    partial void DeleteContract(Contract instance);
    partial void InsertContractingIntent(ContractingIntent instance);
    partial void UpdateContractingIntent(ContractingIntent instance);
    partial void DeleteContractingIntent(ContractingIntent instance);
    partial void InsertContractingParty(ContractingParty instance);
    partial void UpdateContractingParty(ContractingParty instance);
    partial void DeleteContractingParty(ContractingParty instance);
    partial void InsertOrganizationUser(OrganizationUser instance);
    partial void UpdateOrganizationUser(OrganizationUser instance);
    partial void DeleteOrganizationUser(OrganizationUser instance);
    partial void InsertUserProfile(UserProfile instance);
    partial void UpdateUserProfile(UserProfile instance);
    partial void DeleteUserProfile(UserProfile instance);
    partial void InsertUserRole(UserRole instance);
    partial void UpdateUserRole(UserRole instance);
    partial void DeleteUserRole(UserRole instance);
    partial void InsertUserRoleDefinition(UserRoleDefinition instance);
    partial void UpdateUserRoleDefinition(UserRoleDefinition instance);
    partial void DeleteUserRoleDefinition(UserRoleDefinition instance);
    partial void InsertSealTemplate(SealTemplate instance);
    partial void UpdateSealTemplate(SealTemplate instance);
    partial void DeleteSealTemplate(SealTemplate instance);
    partial void InsertContractSealRequest(ContractSealRequest instance);
    partial void UpdateContractSealRequest(ContractSealRequest instance);
    partial void DeleteContractSealRequest(ContractSealRequest instance);
    partial void InsertOrganization(Organization instance);
    partial void UpdateOrganization(Organization instance);
    partial void DeleteOrganization(Organization instance);
    partial void InsertCHT_Token(CHT_Token instance);
    partial void UpdateCHT_Token(CHT_Token instance);
    partial void DeleteCHT_Token(CHT_Token instance);
    partial void InsertContractSignature(ContractSignature instance);
    partial void UpdateContractSignature(ContractSignature instance);
    partial void DeleteContractSignature(ContractSignature instance);
    partial void InsertContractSignatureRequest(ContractSignatureRequest instance);
    partial void UpdateContractSignatureRequest(ContractSignatureRequest instance);
    partial void DeleteContractSignatureRequest(ContractSignatureRequest instance);
    partial void InsertOrganizationToken(OrganizationToken instance);
    partial void UpdateOrganizationToken(OrganizationToken instance);
    partial void DeleteOrganizationToken(OrganizationToken instance);
    #endregion
		
		public DCDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CDS_Document> CDS_Document
		{
			get
			{
				return this.GetTable<CDS_Document>();
			}
		}
		
		public System.Data.Linq.Table<Contract> Contract
		{
			get
			{
				return this.GetTable<Contract>();
			}
		}
		
		public System.Data.Linq.Table<ContractingIntent> ContractingIntent
		{
			get
			{
				return this.GetTable<ContractingIntent>();
			}
		}
		
		public System.Data.Linq.Table<ContractingParty> ContractingParty
		{
			get
			{
				return this.GetTable<ContractingParty>();
			}
		}
		
		public System.Data.Linq.Table<OrganizationUser> OrganizationUser
		{
			get
			{
				return this.GetTable<OrganizationUser>();
			}
		}
		
		public System.Data.Linq.Table<UserProfile> UserProfile
		{
			get
			{
				return this.GetTable<UserProfile>();
			}
		}
		
		public System.Data.Linq.Table<UserRole> UserRole
		{
			get
			{
				return this.GetTable<UserRole>();
			}
		}
		
		public System.Data.Linq.Table<UserRoleDefinition> UserRoleDefinition
		{
			get
			{
				return this.GetTable<UserRoleDefinition>();
			}
		}
		
		public System.Data.Linq.Table<SealTemplate> SealTemplate
		{
			get
			{
				return this.GetTable<SealTemplate>();
			}
		}
		
		public System.Data.Linq.Table<ContractSealRequest> ContractSealRequest
		{
			get
			{
				return this.GetTable<ContractSealRequest>();
			}
		}
		
		public System.Data.Linq.Table<Organization> Organization
		{
			get
			{
				return this.GetTable<Organization>();
			}
		}
		
		public System.Data.Linq.Table<CHT_Token> CHT_Token
		{
			get
			{
				return this.GetTable<CHT_Token>();
			}
		}
		
		public System.Data.Linq.Table<ContractSignature> ContractSignature
		{
			get
			{
				return this.GetTable<ContractSignature>();
			}
		}
		
		public System.Data.Linq.Table<ContractSignatureRequest> ContractSignatureRequest
		{
			get
			{
				return this.GetTable<ContractSignatureRequest>();
			}
		}
		
		public System.Data.Linq.Table<OrganizationToken> OrganizationToken
		{
			get
			{
				return this.GetTable<OrganizationToken>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CDS_Document")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CDS_Document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocID;
		
		private System.Nullable<int> _DocType;
		
		private System.DateTime _DocDate;
		
		private System.Nullable<int> _CurrentStep;
		
		private System.Nullable<int> _ChannelID;
		
		private System.Nullable<int> _ProcessType;
		
		private EntityRef<Contract> _Contract;
		
		private bool serializing;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    partial void OnDocTypeChanging(System.Nullable<int> value);
    partial void OnDocTypeChanged();
    partial void OnDocDateChanging(System.DateTime value);
    partial void OnDocDateChanged();
    partial void OnCurrentStepChanging(System.Nullable<int> value);
    partial void OnCurrentStepChanged();
    partial void OnChannelIDChanging(System.Nullable<int> value);
    partial void OnChannelIDChanged();
    partial void OnProcessTypeChanging(System.Nullable<int> value);
    partial void OnProcessTypeChanged();
    #endregion
		
		public CDS_Document()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocType", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> DocType
		{
			get
			{
				return this._DocType;
			}
			set
			{
				if ((this._DocType != value))
				{
					this.OnDocTypeChanging(value);
					this.SendPropertyChanging();
					this._DocType = value;
					this.SendPropertyChanged("DocType");
					this.OnDocTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime DocDate
		{
			get
			{
				return this._DocDate;
			}
			set
			{
				if ((this._DocDate != value))
				{
					this.OnDocDateChanging(value);
					this.SendPropertyChanging();
					this._DocDate = value;
					this.SendPropertyChanged("DocDate");
					this.OnDocDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentStep", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> CurrentStep
		{
			get
			{
				return this._CurrentStep;
			}
			set
			{
				if ((this._CurrentStep != value))
				{
					this.OnCurrentStepChanging(value);
					this.SendPropertyChanging();
					this._CurrentStep = value;
					this.SendPropertyChanged("CurrentStep");
					this.OnCurrentStepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChannelID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> ChannelID
		{
			get
			{
				return this._ChannelID;
			}
			set
			{
				if ((this._ChannelID != value))
				{
					this.OnChannelIDChanging(value);
					this.SendPropertyChanging();
					this._ChannelID = value;
					this.SendPropertyChanged("ChannelID");
					this.OnChannelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessType", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> ProcessType
		{
			get
			{
				return this._ProcessType;
			}
			set
			{
				if ((this._ProcessType != value))
				{
					this.OnProcessTypeChanging(value);
					this.SendPropertyChanging();
					this._ProcessType = value;
					this.SendPropertyChanged("ProcessType");
					this.OnProcessTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_Contract", Storage="_Contract", ThisKey="DocID", OtherKey="ContractID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public Contract Contract
		{
			get
			{
				if ((this.serializing 
							&& (this._Contract.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._Contract.Entity;
			}
			set
			{
				Contract previousValue = this._Contract.Entity;
				if (((previousValue != value) 
							|| (this._Contract.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contract.Entity = null;
						previousValue.CDS_Document = null;
					}
					this._Contract.Entity = value;
					if ((value != null))
					{
						value.CDS_Document = this;
					}
					this.SendPropertyChanged("Contract");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Contract = default(EntityRef<Contract>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contract")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Contract : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContractID;
		
		private string _FilePath;
		
		private string _ContractNo;
		
		private string _Title;
		
		private EntitySet<ContractingParty> _ContractingParty;
		
		private EntitySet<ContractSealRequest> _ContractSealRequest;
		
		private EntityRef<ContractSignature> _ContractSignature;
		
		private EntitySet<ContractSignatureRequest> _ContractSignatureRequest;
		
		private EntityRef<CDS_Document> _CDS_Document;
		
		private bool serializing;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContractIDChanging(int value);
    partial void OnContractIDChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnContractNoChanging(string value);
    partial void OnContractNoChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public Contract()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					if (this._CDS_Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractNo", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ContractNo
		{
			get
			{
				return this._ContractNo;
			}
			set
			{
				if ((this._ContractNo != value))
				{
					this.OnContractNoChanging(value);
					this.SendPropertyChanging();
					this._ContractNo = value;
					this.SendPropertyChanged("ContractNo");
					this.OnContractNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_ContractingParty", Storage="_ContractingParty", ThisKey="ContractID", OtherKey="ContractID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<ContractingParty> ContractingParty
		{
			get
			{
				if ((this.serializing 
							&& (this._ContractingParty.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ContractingParty;
			}
			set
			{
				this._ContractingParty.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_ContractSealRequest", Storage="_ContractSealRequest", ThisKey="ContractID", OtherKey="ContractID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<ContractSealRequest> ContractSealRequest
		{
			get
			{
				if ((this.serializing 
							&& (this._ContractSealRequest.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ContractSealRequest;
			}
			set
			{
				this._ContractSealRequest.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_ContractSignature", Storage="_ContractSignature", ThisKey="ContractID", OtherKey="ContractID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public ContractSignature ContractSignature
		{
			get
			{
				if ((this.serializing 
							&& (this._ContractSignature.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._ContractSignature.Entity;
			}
			set
			{
				ContractSignature previousValue = this._ContractSignature.Entity;
				if (((previousValue != value) 
							|| (this._ContractSignature.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContractSignature.Entity = null;
						previousValue.Contract = null;
					}
					this._ContractSignature.Entity = value;
					if ((value != null))
					{
						value.Contract = this;
					}
					this.SendPropertyChanged("ContractSignature");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_ContractSignatureRequest", Storage="_ContractSignatureRequest", ThisKey="ContractID", OtherKey="ContractID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<ContractSignatureRequest> ContractSignatureRequest
		{
			get
			{
				if ((this.serializing 
							&& (this._ContractSignatureRequest.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ContractSignatureRequest;
			}
			set
			{
				this._ContractSignatureRequest.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_Contract", Storage="_CDS_Document", ThisKey="ContractID", OtherKey="DocID", IsForeignKey=true)]
		public CDS_Document CDS_Document
		{
			get
			{
				return this._CDS_Document.Entity;
			}
			set
			{
				CDS_Document previousValue = this._CDS_Document.Entity;
				if (((previousValue != value) 
							|| (this._CDS_Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CDS_Document.Entity = null;
						previousValue.Contract = null;
					}
					this._CDS_Document.Entity = value;
					if ((value != null))
					{
						value.Contract = this;
						this._ContractID = value.DocID;
					}
					else
					{
						this._ContractID = default(int);
					}
					this.SendPropertyChanged("CDS_Document");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContractingParty(ContractingParty entity)
		{
			this.SendPropertyChanging();
			entity.Contract = this;
		}
		
		private void detach_ContractingParty(ContractingParty entity)
		{
			this.SendPropertyChanging();
			entity.Contract = null;
		}
		
		private void attach_ContractSealRequest(ContractSealRequest entity)
		{
			this.SendPropertyChanging();
			entity.Contract = this;
		}
		
		private void detach_ContractSealRequest(ContractSealRequest entity)
		{
			this.SendPropertyChanging();
			entity.Contract = null;
		}
		
		private void attach_ContractSignatureRequest(ContractSignatureRequest entity)
		{
			this.SendPropertyChanging();
			entity.Contract = this;
		}
		
		private void detach_ContractSignatureRequest(ContractSignatureRequest entity)
		{
			this.SendPropertyChanging();
			entity.Contract = null;
		}
		
		private void Initialize()
		{
			this._ContractingParty = new EntitySet<ContractingParty>(new Action<ContractingParty>(this.attach_ContractingParty), new Action<ContractingParty>(this.detach_ContractingParty));
			this._ContractSealRequest = new EntitySet<ContractSealRequest>(new Action<ContractSealRequest>(this.attach_ContractSealRequest), new Action<ContractSealRequest>(this.detach_ContractSealRequest));
			this._ContractSignature = default(EntityRef<ContractSignature>);
			this._ContractSignatureRequest = new EntitySet<ContractSignatureRequest>(new Action<ContractSignatureRequest>(this.attach_ContractSignatureRequest), new Action<ContractSignatureRequest>(this.detach_ContractSignatureRequest));
			this._CDS_Document = default(EntityRef<CDS_Document>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContractingIntent")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ContractingIntent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IntentID;
		
		private string _Description;
		
		private EntitySet<ContractingParty> _ContractingParty;
		
		private EntitySet<SealTemplate> _SealTemplate;
		
		private bool serializing;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIntentIDChanging(int value);
    partial void OnIntentIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public ContractingIntent()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntentID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int IntentID
		{
			get
			{
				return this._IntentID;
			}
			set
			{
				if ((this._IntentID != value))
				{
					this.OnIntentIDChanging(value);
					this.SendPropertyChanging();
					this._IntentID = value;
					this.SendPropertyChanged("IntentID");
					this.OnIntentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContractingIntent_ContractingParty", Storage="_ContractingParty", ThisKey="IntentID", OtherKey="IntentID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<ContractingParty> ContractingParty
		{
			get
			{
				if ((this.serializing 
							&& (this._ContractingParty.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ContractingParty;
			}
			set
			{
				this._ContractingParty.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContractingIntent_SealTemplate", Storage="_SealTemplate", ThisKey="IntentID", OtherKey="IntentID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<SealTemplate> SealTemplate
		{
			get
			{
				if ((this.serializing 
							&& (this._SealTemplate.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SealTemplate;
			}
			set
			{
				this._SealTemplate.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContractingParty(ContractingParty entity)
		{
			this.SendPropertyChanging();
			entity.ContractingIntent = this;
		}
		
		private void detach_ContractingParty(ContractingParty entity)
		{
			this.SendPropertyChanging();
			entity.ContractingIntent = null;
		}
		
		private void attach_SealTemplate(SealTemplate entity)
		{
			this.SendPropertyChanging();
			entity.ContractingIntent = this;
		}
		
		private void detach_SealTemplate(SealTemplate entity)
		{
			this.SendPropertyChanging();
			entity.ContractingIntent = null;
		}
		
		private void Initialize()
		{
			this._ContractingParty = new EntitySet<ContractingParty>(new Action<ContractingParty>(this.attach_ContractingParty), new Action<ContractingParty>(this.detach_ContractingParty));
			this._SealTemplate = new EntitySet<SealTemplate>(new Action<SealTemplate>(this.attach_SealTemplate), new Action<SealTemplate>(this.detach_SealTemplate));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContractingParty")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ContractingParty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContractID;
		
		private int _CompanyID;
		
		private int _IntentID;
		
		private System.Nullable<bool> _IsInitiator;
		
		private EntityRef<Contract> _Contract;
		
		private EntityRef<ContractingIntent> _ContractingIntent;
		
		private EntityRef<Organization> _Organization;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContractIDChanging(int value);
    partial void OnContractIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnIntentIDChanging(int value);
    partial void OnIntentIDChanged();
    partial void OnIsInitiatorChanging(System.Nullable<bool> value);
    partial void OnIsInitiatorChanged();
    #endregion
		
		public ContractingParty()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					if (this._Contract.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntentID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int IntentID
		{
			get
			{
				return this._IntentID;
			}
			set
			{
				if ((this._IntentID != value))
				{
					if (this._ContractingIntent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIntentIDChanging(value);
					this.SendPropertyChanging();
					this._IntentID = value;
					this.SendPropertyChanged("IntentID");
					this.OnIntentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInitiator", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> IsInitiator
		{
			get
			{
				return this._IsInitiator;
			}
			set
			{
				if ((this._IsInitiator != value))
				{
					this.OnIsInitiatorChanging(value);
					this.SendPropertyChanging();
					this._IsInitiator = value;
					this.SendPropertyChanged("IsInitiator");
					this.OnIsInitiatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_ContractingParty", Storage="_Contract", ThisKey="ContractID", OtherKey="ContractID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Contract Contract
		{
			get
			{
				return this._Contract.Entity;
			}
			set
			{
				Contract previousValue = this._Contract.Entity;
				if (((previousValue != value) 
							|| (this._Contract.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contract.Entity = null;
						previousValue.ContractingParty.Remove(this);
					}
					this._Contract.Entity = value;
					if ((value != null))
					{
						value.ContractingParty.Add(this);
						this._ContractID = value.ContractID;
					}
					else
					{
						this._ContractID = default(int);
					}
					this.SendPropertyChanged("Contract");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContractingIntent_ContractingParty", Storage="_ContractingIntent", ThisKey="IntentID", OtherKey="IntentID", IsForeignKey=true)]
		public ContractingIntent ContractingIntent
		{
			get
			{
				return this._ContractingIntent.Entity;
			}
			set
			{
				ContractingIntent previousValue = this._ContractingIntent.Entity;
				if (((previousValue != value) 
							|| (this._ContractingIntent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContractingIntent.Entity = null;
						previousValue.ContractingParty.Remove(this);
					}
					this._ContractingIntent.Entity = value;
					if ((value != null))
					{
						value.ContractingParty.Add(this);
						this._IntentID = value.IntentID;
					}
					else
					{
						this._IntentID = default(int);
					}
					this.SendPropertyChanged("ContractingIntent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_ContractingParty", Storage="_Organization", ThisKey="CompanyID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.ContractingParty.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.ContractingParty.Add(this);
						this._CompanyID = value.CompanyID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Contract = default(EntityRef<Contract>);
			this._ContractingIntent = default(EntityRef<ContractingIntent>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrganizationUser")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class OrganizationUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UID;
		
		private int _CompanyID;
		
		private EntityRef<UserProfile> _UserProfile;
		
		private EntityRef<Organization> _Organization;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(int value);
    partial void OnUIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    #endregion
		
		public OrganizationUser()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_OrganizationUser", Storage="_UserProfile", ThisKey="UID", OtherKey="UID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.OrganizationUser = null;
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.OrganizationUser = this;
						this._UID = value.UID;
					}
					else
					{
						this._UID = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_OrganizationUser", Storage="_Organization", ThisKey="CompanyID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.OrganizationUser.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.OrganizationUser.Add(this);
						this._CompanyID = value.CompanyID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._UserProfile = default(EntityRef<UserProfile>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserProfile")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UID;
		
		private string _UserName;
		
		private string _PID;
		
		private string _Password;
		
		private string _ContactTitle;
		
		private string _Address;
		
		private string _City;
		
		private string _Region;
		
		private string _PostalCode;
		
		private string _Country;
		
		private string _MobilePhone;
		
		private string _Phone;
		
		private string _Phone2;
		
		private string _Fax;
		
		private string _EMail;
		
		private System.Nullable<System.DateTime> _Expiration;
		
		private System.Nullable<int> _Creator;
		
		private System.Nullable<int> _AuthID;
		
		private System.Nullable<int> _LevelID;
		
		private string _ThemeName;
		
		private string _Password2;
		
		private string _MailID;
		
		private EntityRef<OrganizationUser> _OrganizationUser;
		
		private EntitySet<UserProfile> _UserProfile2;
		
		private EntitySet<UserProfile> _UserProfile4;
		
		private EntitySet<UserRole> _UserRole;
		
		private EntitySet<ContractSealRequest> _ContractSealRequest;
		
		private EntitySet<ContractSignatureRequest> _ContractSignatureRequest;
		
		private EntityRef<UserProfile> _UserProfile1;
		
		private EntityRef<UserProfile> _UserProfile3;
		
		private bool serializing;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(int value);
    partial void OnUIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPIDChanging(string value);
    partial void OnPIDChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnContactTitleChanging(string value);
    partial void OnContactTitleChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    partial void OnExpirationChanging(System.Nullable<System.DateTime> value);
    partial void OnExpirationChanged();
    partial void OnCreatorChanging(System.Nullable<int> value);
    partial void OnCreatorChanged();
    partial void OnAuthIDChanging(System.Nullable<int> value);
    partial void OnAuthIDChanged();
    partial void OnLevelIDChanging(System.Nullable<int> value);
    partial void OnLevelIDChanged();
    partial void OnThemeNameChanging(string value);
    partial void OnThemeNameChanged();
    partial void OnPassword2Changing(string value);
    partial void OnPassword2Changed();
    partial void OnMailIDChanging(string value);
    partial void OnMailIDChanged();
    #endregion
		
		public UserProfile()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactTitle", DbType="NVarChar(30)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string ContactTitle
		{
			get
			{
				return this._ContactTitle;
			}
			set
			{
				if ((this._ContactTitle != value))
				{
					this.OnContactTitleChanging(value);
					this.SendPropertyChanging();
					this._ContactTitle = value;
					this.SendPropertyChanged("ContactTitle");
					this.OnContactTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="NVarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expiration", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<System.DateTime> Expiration
		{
			get
			{
				return this._Expiration;
			}
			set
			{
				if ((this._Expiration != value))
				{
					this.OnExpirationChanging(value);
					this.SendPropertyChanging();
					this._Expiration = value;
					this.SendPropertyChanged("Expiration");
					this.OnExpirationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<int> Creator
		{
			get
			{
				return this._Creator;
			}
			set
			{
				if ((this._Creator != value))
				{
					if (this._UserProfile1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatorChanging(value);
					this.SendPropertyChanging();
					this._Creator = value;
					this.SendPropertyChanged("Creator");
					this.OnCreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<int> AuthID
		{
			get
			{
				return this._AuthID;
			}
			set
			{
				if ((this._AuthID != value))
				{
					if (this._UserProfile3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuthIDChanging(value);
					this.SendPropertyChanging();
					this._AuthID = value;
					this.SendPropertyChanged("AuthID");
					this.OnAuthIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<int> LevelID
		{
			get
			{
				return this._LevelID;
			}
			set
			{
				if ((this._LevelID != value))
				{
					this.OnLevelIDChanging(value);
					this.SendPropertyChanging();
					this._LevelID = value;
					this.SendPropertyChanged("LevelID");
					this.OnLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThemeName", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public string ThemeName
		{
			get
			{
				return this._ThemeName;
			}
			set
			{
				if ((this._ThemeName != value))
				{
					this.OnThemeNameChanging(value);
					this.SendPropertyChanging();
					this._ThemeName = value;
					this.SendPropertyChanged("ThemeName");
					this.OnThemeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password2", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public string Password2
		{
			get
			{
				return this._Password2;
			}
			set
			{
				if ((this._Password2 != value))
				{
					this.OnPassword2Changing(value);
					this.SendPropertyChanging();
					this._Password2 = value;
					this.SendPropertyChanged("Password2");
					this.OnPassword2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailID", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public string MailID
		{
			get
			{
				return this._MailID;
			}
			set
			{
				if ((this._MailID != value))
				{
					this.OnMailIDChanging(value);
					this.SendPropertyChanging();
					this._MailID = value;
					this.SendPropertyChanged("MailID");
					this.OnMailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_OrganizationUser", Storage="_OrganizationUser", ThisKey="UID", OtherKey="UID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public OrganizationUser OrganizationUser
		{
			get
			{
				if ((this.serializing 
							&& (this._OrganizationUser.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._OrganizationUser.Entity;
			}
			set
			{
				OrganizationUser previousValue = this._OrganizationUser.Entity;
				if (((previousValue != value) 
							|| (this._OrganizationUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizationUser.Entity = null;
						previousValue.UserProfile = null;
					}
					this._OrganizationUser.Entity = value;
					if ((value != null))
					{
						value.UserProfile = this;
					}
					this.SendPropertyChanged("OrganizationUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_UserProfile", Storage="_UserProfile2", ThisKey="UID", OtherKey="Creator")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public EntitySet<UserProfile> UserProfile2
		{
			get
			{
				if ((this.serializing 
							&& (this._UserProfile2.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserProfile2;
			}
			set
			{
				this._UserProfile2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_UserProfile1", Storage="_UserProfile4", ThisKey="UID", OtherKey="AuthID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25, EmitDefaultValue=false)]
		public EntitySet<UserProfile> UserProfile4
		{
			get
			{
				if ((this.serializing 
							&& (this._UserProfile4.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserProfile4;
			}
			set
			{
				this._UserProfile4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_UserRole", Storage="_UserRole", ThisKey="UID", OtherKey="UID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26, EmitDefaultValue=false)]
		public EntitySet<UserRole> UserRole
		{
			get
			{
				if ((this.serializing 
							&& (this._UserRole.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserRole;
			}
			set
			{
				this._UserRole.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_ContractSealRequest", Storage="_ContractSealRequest", ThisKey="UID", OtherKey="StampUID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27, EmitDefaultValue=false)]
		public EntitySet<ContractSealRequest> ContractSealRequest
		{
			get
			{
				if ((this.serializing 
							&& (this._ContractSealRequest.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ContractSealRequest;
			}
			set
			{
				this._ContractSealRequest.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_ContractSignatureRequest", Storage="_ContractSignatureRequest", ThisKey="UID", OtherKey="SignerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28, EmitDefaultValue=false)]
		public EntitySet<ContractSignatureRequest> ContractSignatureRequest
		{
			get
			{
				if ((this.serializing 
							&& (this._ContractSignatureRequest.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ContractSignatureRequest;
			}
			set
			{
				this._ContractSignatureRequest.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_UserProfile", Storage="_UserProfile1", ThisKey="Creator", OtherKey="UID", IsForeignKey=true)]
		public UserProfile UserProfile1
		{
			get
			{
				return this._UserProfile1.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile1.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile1.Entity = null;
						previousValue.UserProfile2.Remove(this);
					}
					this._UserProfile1.Entity = value;
					if ((value != null))
					{
						value.UserProfile2.Add(this);
						this._Creator = value.UID;
					}
					else
					{
						this._Creator = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserProfile1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_UserProfile1", Storage="_UserProfile3", ThisKey="AuthID", OtherKey="UID", IsForeignKey=true)]
		public UserProfile UserProfile3
		{
			get
			{
				return this._UserProfile3.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile3.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile3.Entity = null;
						previousValue.UserProfile4.Remove(this);
					}
					this._UserProfile3.Entity = value;
					if ((value != null))
					{
						value.UserProfile4.Add(this);
						this._AuthID = value.UID;
					}
					else
					{
						this._AuthID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserProfile3");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserProfile2(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile1 = this;
		}
		
		private void detach_UserProfile2(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile1 = null;
		}
		
		private void attach_UserProfile4(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile3 = this;
		}
		
		private void detach_UserProfile4(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile3 = null;
		}
		
		private void attach_UserRole(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_UserRole(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_ContractSealRequest(ContractSealRequest entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_ContractSealRequest(ContractSealRequest entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_ContractSignatureRequest(ContractSignatureRequest entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_ContractSignatureRequest(ContractSignatureRequest entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void Initialize()
		{
			this._OrganizationUser = default(EntityRef<OrganizationUser>);
			this._UserProfile2 = new EntitySet<UserProfile>(new Action<UserProfile>(this.attach_UserProfile2), new Action<UserProfile>(this.detach_UserProfile2));
			this._UserProfile4 = new EntitySet<UserProfile>(new Action<UserProfile>(this.attach_UserProfile4), new Action<UserProfile>(this.detach_UserProfile4));
			this._UserRole = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRole), new Action<UserRole>(this.detach_UserRole));
			this._ContractSealRequest = new EntitySet<ContractSealRequest>(new Action<ContractSealRequest>(this.attach_ContractSealRequest), new Action<ContractSealRequest>(this.detach_ContractSealRequest));
			this._ContractSignatureRequest = new EntitySet<ContractSignatureRequest>(new Action<ContractSignatureRequest>(this.attach_ContractSignatureRequest), new Action<ContractSignatureRequest>(this.detach_ContractSignatureRequest));
			this._UserProfile1 = default(EntityRef<UserProfile>);
			this._UserProfile3 = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRole")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UID;
		
		private int _RoleID;
		
		private EntityRef<UserProfile> _UserProfile;
		
		private EntityRef<UserRoleDefinition> _UserRoleDefinition;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(int value);
    partial void OnUIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    #endregion
		
		public UserRole()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._UserRoleDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_UserRole", Storage="_UserProfile", ThisKey="UID", OtherKey="UID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.UserRole.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.UserRole.Add(this);
						this._UID = value.UID;
					}
					else
					{
						this._UID = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRoleDefinition_UserRole", Storage="_UserRoleDefinition", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true)]
		public UserRoleDefinition UserRoleDefinition
		{
			get
			{
				return this._UserRoleDefinition.Entity;
			}
			set
			{
				UserRoleDefinition previousValue = this._UserRoleDefinition.Entity;
				if (((previousValue != value) 
							|| (this._UserRoleDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserRoleDefinition.Entity = null;
						previousValue.UserRole.Remove(this);
					}
					this._UserRoleDefinition.Entity = value;
					if ((value != null))
					{
						value.UserRole.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("UserRoleDefinition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._UserProfile = default(EntityRef<UserProfile>);
			this._UserRoleDefinition = default(EntityRef<UserRoleDefinition>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRoleDefinition")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserRoleDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleID;
		
		private string _Role;
		
		private EntitySet<UserRole> _UserRole;
		
		private EntitySet<SealTemplate> _SealTemplate;
		
		private bool serializing;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    #endregion
		
		public UserRoleDefinition()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRoleDefinition_UserRole", Storage="_UserRole", ThisKey="RoleID", OtherKey="RoleID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<UserRole> UserRole
		{
			get
			{
				if ((this.serializing 
							&& (this._UserRole.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserRole;
			}
			set
			{
				this._UserRole.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRoleDefinition_SealTemplate", Storage="_SealTemplate", ThisKey="RoleID", OtherKey="RoleID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<SealTemplate> SealTemplate
		{
			get
			{
				if ((this.serializing 
							&& (this._SealTemplate.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SealTemplate;
			}
			set
			{
				this._SealTemplate.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserRole(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.UserRoleDefinition = this;
		}
		
		private void detach_UserRole(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.UserRoleDefinition = null;
		}
		
		private void attach_SealTemplate(SealTemplate entity)
		{
			this.SendPropertyChanging();
			entity.UserRoleDefinition = this;
		}
		
		private void detach_SealTemplate(SealTemplate entity)
		{
			this.SendPropertyChanging();
			entity.UserRoleDefinition = null;
		}
		
		private void Initialize()
		{
			this._UserRole = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRole), new Action<UserRole>(this.detach_UserRole));
			this._SealTemplate = new EntitySet<SealTemplate>(new Action<SealTemplate>(this.attach_SealTemplate), new Action<SealTemplate>(this.detach_SealTemplate));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SealTemplate")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SealTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SealID;
		
		private int _Width;
		
		private int _Height;
		
		private string _FilePath;
		
		private string _Intent;
		
		private System.Nullable<int> _IntentID;
		
		private System.Nullable<int> _RoleID;
		
		private EntitySet<ContractSealRequest> _ContractSealRequest;
		
		private EntityRef<ContractingIntent> _ContractingIntent;
		
		private EntityRef<UserRoleDefinition> _UserRoleDefinition;
		
		private bool serializing;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSealIDChanging(int value);
    partial void OnSealIDChanged();
    partial void OnWidthChanging(int value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(int value);
    partial void OnHeightChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnIntentChanging(string value);
    partial void OnIntentChanged();
    partial void OnIntentIDChanging(System.Nullable<int> value);
    partial void OnIntentIDChanged();
    partial void OnRoleIDChanging(System.Nullable<int> value);
    partial void OnRoleIDChanged();
    #endregion
		
		public SealTemplate()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SealID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int SealID
		{
			get
			{
				return this._SealID;
			}
			set
			{
				if ((this._SealID != value))
				{
					this.OnSealIDChanging(value);
					this.SendPropertyChanging();
					this._SealID = value;
					this.SendPropertyChanged("SealID");
					this.OnSealIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Intent", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Intent
		{
			get
			{
				return this._Intent;
			}
			set
			{
				if ((this._Intent != value))
				{
					this.OnIntentChanging(value);
					this.SendPropertyChanging();
					this._Intent = value;
					this.SendPropertyChanged("Intent");
					this.OnIntentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntentID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> IntentID
		{
			get
			{
				return this._IntentID;
			}
			set
			{
				if ((this._IntentID != value))
				{
					if (this._ContractingIntent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIntentIDChanging(value);
					this.SendPropertyChanging();
					this._IntentID = value;
					this.SendPropertyChanged("IntentID");
					this.OnIntentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._UserRoleDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SealTemplate_ContractSealRequest", Storage="_ContractSealRequest", ThisKey="SealID", OtherKey="SealID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<ContractSealRequest> ContractSealRequest
		{
			get
			{
				if ((this.serializing 
							&& (this._ContractSealRequest.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ContractSealRequest;
			}
			set
			{
				this._ContractSealRequest.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContractingIntent_SealTemplate", Storage="_ContractingIntent", ThisKey="IntentID", OtherKey="IntentID", IsForeignKey=true)]
		public ContractingIntent ContractingIntent
		{
			get
			{
				return this._ContractingIntent.Entity;
			}
			set
			{
				ContractingIntent previousValue = this._ContractingIntent.Entity;
				if (((previousValue != value) 
							|| (this._ContractingIntent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContractingIntent.Entity = null;
						previousValue.SealTemplate.Remove(this);
					}
					this._ContractingIntent.Entity = value;
					if ((value != null))
					{
						value.SealTemplate.Add(this);
						this._IntentID = value.IntentID;
					}
					else
					{
						this._IntentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ContractingIntent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRoleDefinition_SealTemplate", Storage="_UserRoleDefinition", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true)]
		public UserRoleDefinition UserRoleDefinition
		{
			get
			{
				return this._UserRoleDefinition.Entity;
			}
			set
			{
				UserRoleDefinition previousValue = this._UserRoleDefinition.Entity;
				if (((previousValue != value) 
							|| (this._UserRoleDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserRoleDefinition.Entity = null;
						previousValue.SealTemplate.Remove(this);
					}
					this._UserRoleDefinition.Entity = value;
					if ((value != null))
					{
						value.SealTemplate.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserRoleDefinition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContractSealRequest(ContractSealRequest entity)
		{
			this.SendPropertyChanging();
			entity.SealTemplate = this;
		}
		
		private void detach_ContractSealRequest(ContractSealRequest entity)
		{
			this.SendPropertyChanging();
			entity.SealTemplate = null;
		}
		
		private void Initialize()
		{
			this._ContractSealRequest = new EntitySet<ContractSealRequest>(new Action<ContractSealRequest>(this.attach_ContractSealRequest), new Action<ContractSealRequest>(this.detach_ContractSealRequest));
			this._ContractingIntent = default(EntityRef<ContractingIntent>);
			this._UserRoleDefinition = default(EntityRef<UserRoleDefinition>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContractSealRequest")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ContractSealRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContractID;
		
		private int _SealID;
		
		private System.Nullable<System.DateTime> _StampDate;
		
		private System.Data.Linq.Binary _SealImage;
		
		private System.Nullable<int> _StampUID;
		
		private System.Nullable<double> _SealScale;
		
		private EntityRef<Contract> _Contract;
		
		private EntityRef<SealTemplate> _SealTemplate;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContractIDChanging(int value);
    partial void OnContractIDChanged();
    partial void OnSealIDChanging(int value);
    partial void OnSealIDChanged();
    partial void OnStampDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStampDateChanged();
    partial void OnSealImageChanging(System.Data.Linq.Binary value);
    partial void OnSealImageChanged();
    partial void OnStampUIDChanging(System.Nullable<int> value);
    partial void OnStampUIDChanged();
    partial void OnSealScaleChanging(System.Nullable<double> value);
    partial void OnSealScaleChanged();
    #endregion
		
		public ContractSealRequest()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					if (this._Contract.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SealID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int SealID
		{
			get
			{
				return this._SealID;
			}
			set
			{
				if ((this._SealID != value))
				{
					if (this._SealTemplate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSealIDChanging(value);
					this.SendPropertyChanging();
					this._SealID = value;
					this.SendPropertyChanged("SealID");
					this.OnSealIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StampDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> StampDate
		{
			get
			{
				return this._StampDate;
			}
			set
			{
				if ((this._StampDate != value))
				{
					this.OnStampDateChanging(value);
					this.SendPropertyChanging();
					this._StampDate = value;
					this.SendPropertyChanged("StampDate");
					this.OnStampDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SealImage", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Data.Linq.Binary SealImage
		{
			get
			{
				return this._SealImage;
			}
			set
			{
				if ((this._SealImage != value))
				{
					this.OnSealImageChanging(value);
					this.SendPropertyChanging();
					this._SealImage = value;
					this.SendPropertyChanged("SealImage");
					this.OnSealImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StampUID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> StampUID
		{
			get
			{
				return this._StampUID;
			}
			set
			{
				if ((this._StampUID != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStampUIDChanging(value);
					this.SendPropertyChanging();
					this._StampUID = value;
					this.SendPropertyChanged("StampUID");
					this.OnStampUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SealScale", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<double> SealScale
		{
			get
			{
				return this._SealScale;
			}
			set
			{
				if ((this._SealScale != value))
				{
					this.OnSealScaleChanging(value);
					this.SendPropertyChanging();
					this._SealScale = value;
					this.SendPropertyChanged("SealScale");
					this.OnSealScaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_ContractSealRequest", Storage="_Contract", ThisKey="ContractID", OtherKey="ContractID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Contract Contract
		{
			get
			{
				return this._Contract.Entity;
			}
			set
			{
				Contract previousValue = this._Contract.Entity;
				if (((previousValue != value) 
							|| (this._Contract.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contract.Entity = null;
						previousValue.ContractSealRequest.Remove(this);
					}
					this._Contract.Entity = value;
					if ((value != null))
					{
						value.ContractSealRequest.Add(this);
						this._ContractID = value.ContractID;
					}
					else
					{
						this._ContractID = default(int);
					}
					this.SendPropertyChanged("Contract");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SealTemplate_ContractSealRequest", Storage="_SealTemplate", ThisKey="SealID", OtherKey="SealID", IsForeignKey=true)]
		public SealTemplate SealTemplate
		{
			get
			{
				return this._SealTemplate.Entity;
			}
			set
			{
				SealTemplate previousValue = this._SealTemplate.Entity;
				if (((previousValue != value) 
							|| (this._SealTemplate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SealTemplate.Entity = null;
						previousValue.ContractSealRequest.Remove(this);
					}
					this._SealTemplate.Entity = value;
					if ((value != null))
					{
						value.ContractSealRequest.Add(this);
						this._SealID = value.SealID;
					}
					else
					{
						this._SealID = default(int);
					}
					this.SendPropertyChanged("SealTemplate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_ContractSealRequest", Storage="_UserProfile", ThisKey="StampUID", OtherKey="UID", IsForeignKey=true)]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.ContractSealRequest.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.ContractSealRequest.Add(this);
						this._StampUID = value.UID;
					}
					else
					{
						this._StampUID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Contract = default(EntityRef<Contract>);
			this._SealTemplate = default(EntityRef<SealTemplate>);
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organization")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Organization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ContactName;
		
		private string _Fax;
		
		private string _LogoURL;
		
		private string _CompanyName;
		
		private int _CompanyID;
		
		private string _ReceiptNo;
		
		private string _Phone;
		
		private string _ContactFax;
		
		private string _ContactPhone;
		
		private string _ContactMobilePhone;
		
		private string _RegAddr;
		
		private string _UndertakerName;
		
		private string _Addr;
		
		private string _EnglishName;
		
		private string _EnglishAddr;
		
		private string _EnglishRegAddr;
		
		private string _ContactEmail;
		
		private string _UndertakerPhone;
		
		private string _UndertakerFax;
		
		private string _UndertakerMobilePhone;
		
		private string _InvoiceSignature;
		
		private string _UndertakerID;
		
		private string _ContactTitle;
		
		private EntitySet<ContractingParty> _ContractingParty;
		
		private EntitySet<OrganizationUser> _OrganizationUser;
		
		private EntityRef<CHT_Token> _CHT_Token;
		
		private EntitySet<ContractSignatureRequest> _ContractSignatureRequest;
		
		private EntityRef<OrganizationToken> _OrganizationToken;
		
		private bool serializing;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnLogoURLChanging(string value);
    partial void OnLogoURLChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnReceiptNoChanging(string value);
    partial void OnReceiptNoChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnContactFaxChanging(string value);
    partial void OnContactFaxChanged();
    partial void OnContactPhoneChanging(string value);
    partial void OnContactPhoneChanged();
    partial void OnContactMobilePhoneChanging(string value);
    partial void OnContactMobilePhoneChanged();
    partial void OnRegAddrChanging(string value);
    partial void OnRegAddrChanged();
    partial void OnUndertakerNameChanging(string value);
    partial void OnUndertakerNameChanged();
    partial void OnAddrChanging(string value);
    partial void OnAddrChanged();
    partial void OnEnglishNameChanging(string value);
    partial void OnEnglishNameChanged();
    partial void OnEnglishAddrChanging(string value);
    partial void OnEnglishAddrChanged();
    partial void OnEnglishRegAddrChanging(string value);
    partial void OnEnglishRegAddrChanged();
    partial void OnContactEmailChanging(string value);
    partial void OnContactEmailChanged();
    partial void OnUndertakerPhoneChanging(string value);
    partial void OnUndertakerPhoneChanged();
    partial void OnUndertakerFaxChanging(string value);
    partial void OnUndertakerFaxChanged();
    partial void OnUndertakerMobilePhoneChanging(string value);
    partial void OnUndertakerMobilePhoneChanged();
    partial void OnInvoiceSignatureChanging(string value);
    partial void OnInvoiceSignatureChanged();
    partial void OnUndertakerIDChanging(string value);
    partial void OnUndertakerIDChanged();
    partial void OnContactTitleChanging(string value);
    partial void OnContactTitleChanged();
    #endregion
		
		public Organization()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoURL", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string LogoURL
		{
			get
			{
				return this._LogoURL;
			}
			set
			{
				if ((this._LogoURL != value))
				{
					this.OnLogoURLChanging(value);
					this.SendPropertyChanging();
					this._LogoURL = value;
					this.SendPropertyChanged("LogoURL");
					this.OnLogoURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNo", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string ReceiptNo
		{
			get
			{
				return this._ReceiptNo;
			}
			set
			{
				if ((this._ReceiptNo != value))
				{
					this.OnReceiptNoChanging(value);
					this.SendPropertyChanging();
					this._ReceiptNo = value;
					this.SendPropertyChanged("ReceiptNo");
					this.OnReceiptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactFax", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string ContactFax
		{
			get
			{
				return this._ContactFax;
			}
			set
			{
				if ((this._ContactFax != value))
				{
					this.OnContactFaxChanging(value);
					this.SendPropertyChanging();
					this._ContactFax = value;
					this.SendPropertyChanged("ContactFax");
					this.OnContactFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhone", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string ContactPhone
		{
			get
			{
				return this._ContactPhone;
			}
			set
			{
				if ((this._ContactPhone != value))
				{
					this.OnContactPhoneChanging(value);
					this.SendPropertyChanging();
					this._ContactPhone = value;
					this.SendPropertyChanged("ContactPhone");
					this.OnContactPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactMobilePhone", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string ContactMobilePhone
		{
			get
			{
				return this._ContactMobilePhone;
			}
			set
			{
				if ((this._ContactMobilePhone != value))
				{
					this.OnContactMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._ContactMobilePhone = value;
					this.SendPropertyChanged("ContactMobilePhone");
					this.OnContactMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegAddr", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string RegAddr
		{
			get
			{
				return this._RegAddr;
			}
			set
			{
				if ((this._RegAddr != value))
				{
					this.OnRegAddrChanging(value);
					this.SendPropertyChanging();
					this._RegAddr = value;
					this.SendPropertyChanged("RegAddr");
					this.OnRegAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UndertakerName", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string UndertakerName
		{
			get
			{
				return this._UndertakerName;
			}
			set
			{
				if ((this._UndertakerName != value))
				{
					this.OnUndertakerNameChanging(value);
					this.SendPropertyChanging();
					this._UndertakerName = value;
					this.SendPropertyChanged("UndertakerName");
					this.OnUndertakerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addr", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string Addr
		{
			get
			{
				return this._Addr;
			}
			set
			{
				if ((this._Addr != value))
				{
					this.OnAddrChanging(value);
					this.SendPropertyChanging();
					this._Addr = value;
					this.SendPropertyChanged("Addr");
					this.OnAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishName", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string EnglishName
		{
			get
			{
				return this._EnglishName;
			}
			set
			{
				if ((this._EnglishName != value))
				{
					this.OnEnglishNameChanging(value);
					this.SendPropertyChanging();
					this._EnglishName = value;
					this.SendPropertyChanged("EnglishName");
					this.OnEnglishNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishAddr", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string EnglishAddr
		{
			get
			{
				return this._EnglishAddr;
			}
			set
			{
				if ((this._EnglishAddr != value))
				{
					this.OnEnglishAddrChanging(value);
					this.SendPropertyChanging();
					this._EnglishAddr = value;
					this.SendPropertyChanged("EnglishAddr");
					this.OnEnglishAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishRegAddr", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string EnglishRegAddr
		{
			get
			{
				return this._EnglishRegAddr;
			}
			set
			{
				if ((this._EnglishRegAddr != value))
				{
					this.OnEnglishRegAddrChanging(value);
					this.SendPropertyChanging();
					this._EnglishRegAddr = value;
					this.SendPropertyChanged("EnglishRegAddr");
					this.OnEnglishRegAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactEmail", DbType="NVarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string ContactEmail
		{
			get
			{
				return this._ContactEmail;
			}
			set
			{
				if ((this._ContactEmail != value))
				{
					this.OnContactEmailChanging(value);
					this.SendPropertyChanging();
					this._ContactEmail = value;
					this.SendPropertyChanged("ContactEmail");
					this.OnContactEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UndertakerPhone", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public string UndertakerPhone
		{
			get
			{
				return this._UndertakerPhone;
			}
			set
			{
				if ((this._UndertakerPhone != value))
				{
					this.OnUndertakerPhoneChanging(value);
					this.SendPropertyChanging();
					this._UndertakerPhone = value;
					this.SendPropertyChanged("UndertakerPhone");
					this.OnUndertakerPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UndertakerFax", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public string UndertakerFax
		{
			get
			{
				return this._UndertakerFax;
			}
			set
			{
				if ((this._UndertakerFax != value))
				{
					this.OnUndertakerFaxChanging(value);
					this.SendPropertyChanging();
					this._UndertakerFax = value;
					this.SendPropertyChanged("UndertakerFax");
					this.OnUndertakerFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UndertakerMobilePhone", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public string UndertakerMobilePhone
		{
			get
			{
				return this._UndertakerMobilePhone;
			}
			set
			{
				if ((this._UndertakerMobilePhone != value))
				{
					this.OnUndertakerMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._UndertakerMobilePhone = value;
					this.SendPropertyChanged("UndertakerMobilePhone");
					this.OnUndertakerMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceSignature", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public string InvoiceSignature
		{
			get
			{
				return this._InvoiceSignature;
			}
			set
			{
				if ((this._InvoiceSignature != value))
				{
					this.OnInvoiceSignatureChanging(value);
					this.SendPropertyChanging();
					this._InvoiceSignature = value;
					this.SendPropertyChanged("InvoiceSignature");
					this.OnInvoiceSignatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UndertakerID", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public string UndertakerID
		{
			get
			{
				return this._UndertakerID;
			}
			set
			{
				if ((this._UndertakerID != value))
				{
					this.OnUndertakerIDChanging(value);
					this.SendPropertyChanging();
					this._UndertakerID = value;
					this.SendPropertyChanged("UndertakerID");
					this.OnUndertakerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactTitle", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public string ContactTitle
		{
			get
			{
				return this._ContactTitle;
			}
			set
			{
				if ((this._ContactTitle != value))
				{
					this.OnContactTitleChanging(value);
					this.SendPropertyChanging();
					this._ContactTitle = value;
					this.SendPropertyChanged("ContactTitle");
					this.OnContactTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_ContractingParty", Storage="_ContractingParty", ThisKey="CompanyID", OtherKey="CompanyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public EntitySet<ContractingParty> ContractingParty
		{
			get
			{
				if ((this.serializing 
							&& (this._ContractingParty.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ContractingParty;
			}
			set
			{
				this._ContractingParty.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_OrganizationUser", Storage="_OrganizationUser", ThisKey="CompanyID", OtherKey="CompanyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25, EmitDefaultValue=false)]
		public EntitySet<OrganizationUser> OrganizationUser
		{
			get
			{
				if ((this.serializing 
							&& (this._OrganizationUser.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._OrganizationUser;
			}
			set
			{
				this._OrganizationUser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_CHT_Token", Storage="_CHT_Token", ThisKey="CompanyID", OtherKey="CompanyID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26, EmitDefaultValue=false)]
		public CHT_Token CHT_Token
		{
			get
			{
				if ((this.serializing 
							&& (this._CHT_Token.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._CHT_Token.Entity;
			}
			set
			{
				CHT_Token previousValue = this._CHT_Token.Entity;
				if (((previousValue != value) 
							|| (this._CHT_Token.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHT_Token.Entity = null;
						previousValue.Organization = null;
					}
					this._CHT_Token.Entity = value;
					if ((value != null))
					{
						value.Organization = this;
					}
					this.SendPropertyChanged("CHT_Token");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_ContractSignatureRequest", Storage="_ContractSignatureRequest", ThisKey="CompanyID", OtherKey="CompanyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27, EmitDefaultValue=false)]
		public EntitySet<ContractSignatureRequest> ContractSignatureRequest
		{
			get
			{
				if ((this.serializing 
							&& (this._ContractSignatureRequest.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ContractSignatureRequest;
			}
			set
			{
				this._ContractSignatureRequest.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_OrganizationToken", Storage="_OrganizationToken", ThisKey="CompanyID", OtherKey="CompanyID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28, EmitDefaultValue=false)]
		public OrganizationToken OrganizationToken
		{
			get
			{
				if ((this.serializing 
							&& (this._OrganizationToken.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._OrganizationToken.Entity;
			}
			set
			{
				OrganizationToken previousValue = this._OrganizationToken.Entity;
				if (((previousValue != value) 
							|| (this._OrganizationToken.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizationToken.Entity = null;
						previousValue.Organization = null;
					}
					this._OrganizationToken.Entity = value;
					if ((value != null))
					{
						value.Organization = this;
					}
					this.SendPropertyChanged("OrganizationToken");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContractingParty(ContractingParty entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_ContractingParty(ContractingParty entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_OrganizationUser(OrganizationUser entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_OrganizationUser(OrganizationUser entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_ContractSignatureRequest(ContractSignatureRequest entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_ContractSignatureRequest(ContractSignatureRequest entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void Initialize()
		{
			this._ContractingParty = new EntitySet<ContractingParty>(new Action<ContractingParty>(this.attach_ContractingParty), new Action<ContractingParty>(this.detach_ContractingParty));
			this._OrganizationUser = new EntitySet<OrganizationUser>(new Action<OrganizationUser>(this.attach_OrganizationUser), new Action<OrganizationUser>(this.detach_OrganizationUser));
			this._CHT_Token = default(EntityRef<CHT_Token>);
			this._ContractSignatureRequest = new EntitySet<ContractSignatureRequest>(new Action<ContractSignatureRequest>(this.attach_ContractSignatureRequest), new Action<ContractSignatureRequest>(this.detach_ContractSignatureRequest));
			this._OrganizationToken = default(EntityRef<OrganizationToken>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHT_Token")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CHT_Token : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanyID;
		
		private string _Email;
		
		private string _Token;
		
		private string _ClusterID;
		
		private string _ApplicationKey;
		
		private string _ThirdPartyClusterID;
		
		private EntityRef<Organization> _Organization;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTokenChanging(string value);
    partial void OnTokenChanged();
    partial void OnClusterIDChanging(string value);
    partial void OnClusterIDChanged();
    partial void OnApplicationKeyChanging(string value);
    partial void OnApplicationKeyChanged();
    partial void OnThirdPartyClusterIDChanging(string value);
    partial void OnThirdPartyClusterIDChanged();
    #endregion
		
		public CHT_Token()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClusterID", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ClusterID
		{
			get
			{
				return this._ClusterID;
			}
			set
			{
				if ((this._ClusterID != value))
				{
					this.OnClusterIDChanging(value);
					this.SendPropertyChanging();
					this._ClusterID = value;
					this.SendPropertyChanged("ClusterID");
					this.OnClusterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationKey", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string ApplicationKey
		{
			get
			{
				return this._ApplicationKey;
			}
			set
			{
				if ((this._ApplicationKey != value))
				{
					this.OnApplicationKeyChanging(value);
					this.SendPropertyChanging();
					this._ApplicationKey = value;
					this.SendPropertyChanged("ApplicationKey");
					this.OnApplicationKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThirdPartyClusterID", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string ThirdPartyClusterID
		{
			get
			{
				return this._ThirdPartyClusterID;
			}
			set
			{
				if ((this._ThirdPartyClusterID != value))
				{
					this.OnThirdPartyClusterIDChanging(value);
					this.SendPropertyChanging();
					this._ThirdPartyClusterID = value;
					this.SendPropertyChanged("ThirdPartyClusterID");
					this.OnThirdPartyClusterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_CHT_Token", Storage="_Organization", ThisKey="CompanyID", OtherKey="CompanyID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.CHT_Token = null;
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.CHT_Token = this;
						this._CompanyID = value.CompanyID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContractSignature")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ContractSignature : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContractID;
		
		private int _CompanyID;
		
		private EntityRef<Contract> _Contract;
		
		private EntityRef<ContractSignatureRequest> _ContractSignatureRequest;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContractIDChanging(int value);
    partial void OnContractIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    #endregion
		
		public ContractSignature()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					if ((this._Contract.HasLoadedOrAssignedValue || this._ContractSignatureRequest.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._ContractSignatureRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_ContractSignature", Storage="_Contract", ThisKey="ContractID", OtherKey="ContractID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Contract Contract
		{
			get
			{
				return this._Contract.Entity;
			}
			set
			{
				Contract previousValue = this._Contract.Entity;
				if (((previousValue != value) 
							|| (this._Contract.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contract.Entity = null;
						previousValue.ContractSignature = null;
					}
					this._Contract.Entity = value;
					if ((value != null))
					{
						value.ContractSignature = this;
						this._ContractID = value.ContractID;
					}
					else
					{
						this._ContractID = default(int);
					}
					this.SendPropertyChanged("Contract");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContractSignatureRequest_ContractSignature", Storage="_ContractSignatureRequest", ThisKey="ContractID,CompanyID", OtherKey="ContractID,CompanyID", IsForeignKey=true)]
		public ContractSignatureRequest ContractSignatureRequest
		{
			get
			{
				return this._ContractSignatureRequest.Entity;
			}
			set
			{
				ContractSignatureRequest previousValue = this._ContractSignatureRequest.Entity;
				if (((previousValue != value) 
							|| (this._ContractSignatureRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContractSignatureRequest.Entity = null;
						previousValue.ContractSignature.Remove(this);
					}
					this._ContractSignatureRequest.Entity = value;
					if ((value != null))
					{
						value.ContractSignature.Add(this);
						this._ContractID = value.ContractID;
						this._CompanyID = value.CompanyID;
					}
					else
					{
						this._ContractID = default(int);
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("ContractSignatureRequest");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Contract = default(EntityRef<Contract>);
			this._ContractSignatureRequest = default(EntityRef<ContractSignatureRequest>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContractSignatureRequest")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ContractSignatureRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContractID;
		
		private int _CompanyID;
		
		private System.Nullable<int> _SignerID;
		
		private System.Nullable<System.DateTime> _SignatureDate;
		
		private string _RequestPath;
		
		private string _ResponsePath;
		
		private System.Nullable<double> _SealScale;
		
		private System.Data.Linq.Binary _SealImage;
		
		private System.Nullable<double> _MarginTop;
		
		private System.Nullable<double> _MarginLeft;
		
		private System.Nullable<int> _PageIndex;
		
		private System.Nullable<System.DateTime> _StampDate;
		
		private string _RequestTicket;
		
		private EntitySet<ContractSignature> _ContractSignature;
		
		private EntityRef<Contract> _Contract;
		
		private EntityRef<Organization> _Organization;
		
		private EntityRef<UserProfile> _UserProfile;
		
		private bool serializing;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContractIDChanging(int value);
    partial void OnContractIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnSignerIDChanging(System.Nullable<int> value);
    partial void OnSignerIDChanged();
    partial void OnSignatureDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSignatureDateChanged();
    partial void OnRequestPathChanging(string value);
    partial void OnRequestPathChanged();
    partial void OnResponsePathChanging(string value);
    partial void OnResponsePathChanged();
    partial void OnSealScaleChanging(System.Nullable<double> value);
    partial void OnSealScaleChanged();
    partial void OnSealImageChanging(System.Data.Linq.Binary value);
    partial void OnSealImageChanged();
    partial void OnMarginTopChanging(System.Nullable<double> value);
    partial void OnMarginTopChanged();
    partial void OnMarginLeftChanging(System.Nullable<double> value);
    partial void OnMarginLeftChanged();
    partial void OnPageIndexChanging(System.Nullable<int> value);
    partial void OnPageIndexChanged();
    partial void OnStampDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStampDateChanged();
    partial void OnRequestTicketChanging(string value);
    partial void OnRequestTicketChanged();
    #endregion
		
		public ContractSignatureRequest()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ContractID
		{
			get
			{
				return this._ContractID;
			}
			set
			{
				if ((this._ContractID != value))
				{
					if (this._Contract.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractIDChanging(value);
					this.SendPropertyChanging();
					this._ContractID = value;
					this.SendPropertyChanged("ContractID");
					this.OnContractIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignerID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> SignerID
		{
			get
			{
				return this._SignerID;
			}
			set
			{
				if ((this._SignerID != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSignerIDChanging(value);
					this.SendPropertyChanging();
					this._SignerID = value;
					this.SendPropertyChanged("SignerID");
					this.OnSignerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignatureDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> SignatureDate
		{
			get
			{
				return this._SignatureDate;
			}
			set
			{
				if ((this._SignatureDate != value))
				{
					this.OnSignatureDateChanging(value);
					this.SendPropertyChanging();
					this._SignatureDate = value;
					this.SendPropertyChanged("SignatureDate");
					this.OnSignatureDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestPath", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string RequestPath
		{
			get
			{
				return this._RequestPath;
			}
			set
			{
				if ((this._RequestPath != value))
				{
					this.OnRequestPathChanging(value);
					this.SendPropertyChanging();
					this._RequestPath = value;
					this.SendPropertyChanged("RequestPath");
					this.OnRequestPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponsePath", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string ResponsePath
		{
			get
			{
				return this._ResponsePath;
			}
			set
			{
				if ((this._ResponsePath != value))
				{
					this.OnResponsePathChanging(value);
					this.SendPropertyChanging();
					this._ResponsePath = value;
					this.SendPropertyChanged("ResponsePath");
					this.OnResponsePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SealScale", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<double> SealScale
		{
			get
			{
				return this._SealScale;
			}
			set
			{
				if ((this._SealScale != value))
				{
					this.OnSealScaleChanging(value);
					this.SendPropertyChanging();
					this._SealScale = value;
					this.SendPropertyChanged("SealScale");
					this.OnSealScaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SealImage", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Data.Linq.Binary SealImage
		{
			get
			{
				return this._SealImage;
			}
			set
			{
				if ((this._SealImage != value))
				{
					this.OnSealImageChanging(value);
					this.SendPropertyChanging();
					this._SealImage = value;
					this.SendPropertyChanged("SealImage");
					this.OnSealImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarginTop", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<double> MarginTop
		{
			get
			{
				return this._MarginTop;
			}
			set
			{
				if ((this._MarginTop != value))
				{
					this.OnMarginTopChanging(value);
					this.SendPropertyChanging();
					this._MarginTop = value;
					this.SendPropertyChanged("MarginTop");
					this.OnMarginTopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarginLeft", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<double> MarginLeft
		{
			get
			{
				return this._MarginLeft;
			}
			set
			{
				if ((this._MarginLeft != value))
				{
					this.OnMarginLeftChanging(value);
					this.SendPropertyChanging();
					this._MarginLeft = value;
					this.SendPropertyChanged("MarginLeft");
					this.OnMarginLeftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageIndex", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> PageIndex
		{
			get
			{
				return this._PageIndex;
			}
			set
			{
				if ((this._PageIndex != value))
				{
					this.OnPageIndexChanging(value);
					this.SendPropertyChanging();
					this._PageIndex = value;
					this.SendPropertyChanged("PageIndex");
					this.OnPageIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StampDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<System.DateTime> StampDate
		{
			get
			{
				return this._StampDate;
			}
			set
			{
				if ((this._StampDate != value))
				{
					this.OnStampDateChanging(value);
					this.SendPropertyChanging();
					this._StampDate = value;
					this.SendPropertyChanged("StampDate");
					this.OnStampDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTicket", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string RequestTicket
		{
			get
			{
				return this._RequestTicket;
			}
			set
			{
				if ((this._RequestTicket != value))
				{
					this.OnRequestTicketChanging(value);
					this.SendPropertyChanging();
					this._RequestTicket = value;
					this.SendPropertyChanged("RequestTicket");
					this.OnRequestTicketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContractSignatureRequest_ContractSignature", Storage="_ContractSignature", ThisKey="ContractID,CompanyID", OtherKey="ContractID,CompanyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<ContractSignature> ContractSignature
		{
			get
			{
				if ((this.serializing 
							&& (this._ContractSignature.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ContractSignature;
			}
			set
			{
				this._ContractSignature.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_ContractSignatureRequest", Storage="_Contract", ThisKey="ContractID", OtherKey="ContractID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Contract Contract
		{
			get
			{
				return this._Contract.Entity;
			}
			set
			{
				Contract previousValue = this._Contract.Entity;
				if (((previousValue != value) 
							|| (this._Contract.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contract.Entity = null;
						previousValue.ContractSignatureRequest.Remove(this);
					}
					this._Contract.Entity = value;
					if ((value != null))
					{
						value.ContractSignatureRequest.Add(this);
						this._ContractID = value.ContractID;
					}
					else
					{
						this._ContractID = default(int);
					}
					this.SendPropertyChanged("Contract");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_ContractSignatureRequest", Storage="_Organization", ThisKey="CompanyID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.ContractSignatureRequest.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.ContractSignatureRequest.Add(this);
						this._CompanyID = value.CompanyID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_ContractSignatureRequest", Storage="_UserProfile", ThisKey="SignerID", OtherKey="UID", IsForeignKey=true)]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.ContractSignatureRequest.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.ContractSignatureRequest.Add(this);
						this._SignerID = value.UID;
					}
					else
					{
						this._SignerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContractSignature(ContractSignature entity)
		{
			this.SendPropertyChanging();
			entity.ContractSignatureRequest = this;
		}
		
		private void detach_ContractSignature(ContractSignature entity)
		{
			this.SendPropertyChanging();
			entity.ContractSignatureRequest = null;
		}
		
		private void Initialize()
		{
			this._ContractSignature = new EntitySet<ContractSignature>(new Action<ContractSignature>(this.attach_ContractSignature), new Action<ContractSignature>(this.detach_ContractSignature));
			this._Contract = default(EntityRef<Contract>);
			this._Organization = default(EntityRef<Organization>);
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrganizationToken")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class OrganizationToken : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanyID;
		
		private string _X509Certificate;
		
		private string _Thumbprint;
		
		private string _PKCS12;
		
		private System.Nullable<System.Guid> _KeyID;
		
		private System.Nullable<bool> _IsActivated;
		
		private EntityRef<Organization> _Organization;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnX509CertificateChanging(string value);
    partial void OnX509CertificateChanged();
    partial void OnThumbprintChanging(string value);
    partial void OnThumbprintChanged();
    partial void OnPKCS12Changing(string value);
    partial void OnPKCS12Changed();
    partial void OnKeyIDChanging(System.Nullable<System.Guid> value);
    partial void OnKeyIDChanged();
    partial void OnIsActivatedChanging(System.Nullable<bool> value);
    partial void OnIsActivatedChanged();
    #endregion
		
		public OrganizationToken()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_X509Certificate", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string X509Certificate
		{
			get
			{
				return this._X509Certificate;
			}
			set
			{
				if ((this._X509Certificate != value))
				{
					this.OnX509CertificateChanging(value);
					this.SendPropertyChanging();
					this._X509Certificate = value;
					this.SendPropertyChanged("X509Certificate");
					this.OnX509CertificateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thumbprint", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Thumbprint
		{
			get
			{
				return this._Thumbprint;
			}
			set
			{
				if ((this._Thumbprint != value))
				{
					this.OnThumbprintChanging(value);
					this.SendPropertyChanging();
					this._Thumbprint = value;
					this.SendPropertyChanged("Thumbprint");
					this.OnThumbprintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKCS12", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string PKCS12
		{
			get
			{
				return this._PKCS12;
			}
			set
			{
				if ((this._PKCS12 != value))
				{
					this.OnPKCS12Changing(value);
					this.SendPropertyChanging();
					this._PKCS12 = value;
					this.SendPropertyChanged("PKCS12");
					this.OnPKCS12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.Guid> KeyID
		{
			get
			{
				return this._KeyID;
			}
			set
			{
				if ((this._KeyID != value))
				{
					this.OnKeyIDChanging(value);
					this.SendPropertyChanging();
					this._KeyID = value;
					this.SendPropertyChanged("KeyID");
					this.OnKeyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActivated", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> IsActivated
		{
			get
			{
				return this._IsActivated;
			}
			set
			{
				if ((this._IsActivated != value))
				{
					this.OnIsActivatedChanging(value);
					this.SendPropertyChanging();
					this._IsActivated = value;
					this.SendPropertyChanged("IsActivated");
					this.OnIsActivatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_OrganizationToken", Storage="_Organization", ThisKey="CompanyID", OtherKey="CompanyID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.OrganizationToken = null;
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.OrganizationToken = this;
						this._CompanyID = value.CompanyID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
}
#pragma warning restore 1591
