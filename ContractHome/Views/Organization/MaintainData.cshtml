@using System.IO
@using System.Linq.Expressions
@using Microsoft.AspNetCore.Mvc.ModelBinding

@using ContractHome.Helper
@using ContractHome.Controllers
@using ContractHome.Models.DataEntity
@using ContractHome.Models.ViewModel
@using CommonLib.Utility
@using Newtonsoft.Json
@{
  Layout = "~/Views/Shared/MasterPage.cshtml";

  ModelStateDictionary _modelState;
  ModelSource? models;

  models = (ModelSource?)ViewContext.HttpContext.Items["Models"];
  _modelState = (ModelStateDictionary)ViewBag.ModelState;
  QueryViewModel _viewModel = (QueryViewModel)ViewBag.ViewModel;

  _viewModel.UrlAction = Url.Action("InquireData", "Organization");
}
<div id="organization" class="container-lg py-4">
  <section class="queryform">
    <!-- 標題 -->
    <h4 class="mb-2 fw-bolder">公司資料管理</h4>
    <!-- 公司資料維護搜尋-->
    <div class="card shadow-sm">
      <form v-on:submit.prevent method="post" enctype="multipart/form-data">
        <div class="container">
          <div class="row row-cols-1 row-cols-lg-2 row-cols-xl-3 m-3 mb-lg-0 data-item">
            <div class="col input__height">
              <div class="row">
                <label for="CompanyName" class="col-sm-12 col-md-3 col-form-label fw-bolder">公司名稱</label>
                <div id="searchCompanyName" class="col-sm-12 col-md-9">
                  <input v-model="searchFormData.CompanyName" type="text" class="form-control"
                    placeholder="可輸入關鍵字查詢公司名稱" id="CompanyName" autocomplete="off" />
                  <ul v-show="isSearchOptionsOpen" class="list-group mb-3 shadow__card">
                    <li v-for="(result, index) in searchResults" :key="index"
                      class="list-group-item list-group-item-action" v-on:click="setResult(result, 'search')"
                      :class="{'active': index === currentlyCounter}">
                      {{ result.CompanyName }}
                    </li>
                  </ul>
                </div>
              </div>
            </div>
            <div class="col input__height">
              <div class="row">
                <label for="ReceiptNo" class="col-sm-12 col-md-3 col-form-label fw-bolder">統一編號</label>
                <div class="col-sm-12 col-md-9">
                  <input v-model="searchFormData.ReceiptNo" type="text" class="form-control" name="ReceiptNo"
                    id="ReceiptNo" />
                </div>
              </div>
            </div>
            <div class="col input__height">
              <div class="row">
                <label for="Phone" class="col-sm-12 col-md-3 col-form-label fw-bolder">電話</label>
                <div class="col-sm-12 col-md-9">
                  <input v-model="searchFormData.Phone" type="text" class="form-control" name="Phone" id="Phone" />
                </div>
              </div>
            </div>
            <div class="col input__height">
              <div class="row">
                <label for="Fax" class="col-sm-12 col-md-3 col-form-label fw-bolder">傳真</label>
                <div class="col-sm-12 col-md-9">
                  <input v-model="searchFormData.Fax" type="text" class="form-control" name="Fax" id="Fax" />
                </div>
              </div>
            </div>
            <div class="col input__height">
              <div class="row">
                <label for="Addr" class="col-sm-12 col-md-3 col-form-label fw-bolder">地址</label>
                <div class="col-sm-12 col-md-9">
                  <input v-model="searchFormData.Addr" type="text" class="form-control" name="Addr" id="Addr" />
                </div>
              </div>
            </div>
            <div class="col input__height">
              <div class="row">
                <label for="ContactEmail" class="col-sm-12 col-md-3 col-form-label fw-bolder">電子郵件</label>
                <div class="col-sm-12 col-md-9">
                  <input v-model="searchFormData.ContactEmail" type="text" class="form-control"
                    :class="{'is-invalid': searchMailCheck }" name="ContactEmail" id="ContactEmail" />
                  <div class="invalid-feedback">
                    請輸入有效的電子郵件地址
                  </div>
                </div>
              </div>
            </div>
            <div class="col input__height">
              <div class="row">
                <label for="UndertakerName" class="col-sm-12 col-md-3 col-form-label fw-bolder">負責人</label>
                <div class="col-sm-12 col-md-9">
                  <input v-model="searchFormData.UndertakerName" type="text" class="form-control" name="UndertakerName"
                    id="UndertakerName" />
                </div>
              </div>
            </div>
          </div>
        </div>
      </form>
    </div>
    <div class="row">
      <div class="col-12 hstack gap-3 py-3">
        <div class="tooltip__wrapper">
          <button type="button" class="btn btn-lg btn-success rounded-pill opacity-75" v-on:click="editData('addNew')">
            <i class="fal fa-file-plus"></i>
          </button>
          <div class="tooltip__text">新增公司</div>
        </div>
        <div class="ms-auto">
          <button type="button" class="btn btn-secondary opacity-75" v-on:click="resetHandler">重設</button>
        </div>
        <div>
          <button type="button" class="btn btn-primary" v-on:click="inquireData"
            :disabled="this.searchMailCheck">查詢</button>
        </div>
      </div>
    </div>
  </section>

  <!-- 公司資料查詢列表 -->
  <section>
    <!-- 標題 -->
    <h4 class="mb-2 mt-3 fw-bolder">公司列表</h4>
    <!-- 標題 -->
    <div v-if="companyList.length > 0">
      <div class="card shadow-sm p-2 mb-3 table-responsive">
        <table class="table table-hover mb-0">
          <thead>
            <tr>
              <th scope="col">公司名稱</th>
              <th scope="col">統一編號</th>
              <th scope="col">負責人</th>
              <th scope="col">電話</th>
              <th scope="col">傳真</th>
              <th scope="col">地址</th>
              <th scope="col">電子郵件</th>
              <th scope="col"></th>
            </tr>
          </thead>
          <tbody>
            <tr v-for="(company, index) in companyList" :key="`c_${index}`">
              <td class="text-nowrap fs-13">{{ company.CompanyName }}</td>
              <td class="text-nowrap fs-13">{{ company.ReceiptNo }}</td>
              <td class="fs-13">{{ company.UndertakerName }}</td>
              <td class="fs-13">{{ company.Phone }}</td>
              <td class="fs-13">{{ company.Fax }}</td>
              <td class="fs-13">{{ company.Addr }}</td>
              <td class="fs-13">{{ company.ContactEmail }}</td>
              <td class="text-nowrap text-center">
                <!-- 編輯 -->
                <span class="tooltip__wrapper mx-1">
                  <button type="button" class="btn btn-sm btn-primary opacity-75 rounded-pill icon__rounded"
                    v-on:click="editData('edit', company)">
                    <i class="fal fa-edit"></i>
                  </button>
                  <div class="tooltip__text">修改</div>
                </span>
                <!-- 刪除 -->
                <span class="tooltip__wrapper mx-1">
                  <button type="button" id="deleteCompany"
                    class="btn btn-sm btn-danger opacity-75 rounded-pill icon__rounded"
                    v-on:click="openDeleteDialog(company)">
                    <i class="fal fa-trash-alt"></i>
                  </button>
                  <div class="tooltip__text">刪除</div>
                </span>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
      <!-- 分頁模組 -->
      <div class="row g-3 align-items-center justify-content-between">
        <div class="col-auto">
          <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center mb-0">
              <!-- 第一頁 -->
              <li class=" page-item" :class="{'disabled' : page === 1}">
                <a class="page-link" v-on:click="firstPage">
                  <i class="far fa-step-backward"></i>
                </a>
              </li>
              <!-- 前一頁 -->
              <li class=" page-item" :class="{'disabled' : page === 1}">
                <a class="page-link" v-on:click="previousPage">
                  <i class="fal fa-chevron-left"></i>
                </a>
              </li>
              <!-- 頁面列表 -->
              <li v-for="n in totalPages" :key="n" :v-model="page" class="page-item" :class="{'active' : page === n}">
                <a class="page-link" v-on:click="changePage(n)">{{ n }}</a>
              </li>
              <!-- 下一頁 -->
              <li class="page-item" :class="{'disabled' : page === totalPages}">
                <a class="page-link" v-on:click="nextPage">
                  <i class="fal fa-chevron-right"></i>
                </a>
              </li>
              <!-- 最後一頁 -->
              <li class="page-item" :class="{'disabled' : page === totalPages}">
                <a class="page-link" v-on:click="lastPage">
                  <i class="far fa-step-forward"></i>
                </a>
              </li>
            </ul>
          </nav>
        </div>
        <div class="col-auto">
          <div class="row g-3 align-items-center">
            <div class="col-auto fs-13">
              <label for="PageSize">每頁筆數：</label>
            </div>
            <div class="col-auto">
              <select v-model="pageSize" class="form-select form-control-sm" name="PageSize" id="PageSize"
                v-on:change="resetPageSize">
                <option>10</option>
                <option>30</option>
                <option>50</option>
                <option>100</option>
                <option>200</option>
              </select>
            </div>
            <div class="col-auto fs-13">
              共 {{ totalPages }} 頁，{{ totalRecordCount }} 筆
            </div>
          </div>
        </div>
      </div>
    </div>
    <div v-else class="card p-3 text-center">
      <span class="text-primary opacity-75" style="font-size: 50px;">
        <i class="fad fa-folder-open"></i>
      </span>
      <span class="text-primary opacity-75 fw-bolder">目前尚無查詢資料</span>
    </div>
  </section>

  <!-- 刪除 Dialog -->
  <div class="modal fade" id="deleteModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
    aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered ">
      <div class="modal-content">
        <div class="modal-header border-bottom-0">
          <h5 class="modal-title" id="staticBackdropLabel"></h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body text-center h5 fw-bolder">
          確定刪除 <span class="text-primary opacity-75">" {{ currentCompanyData.CompanyName }} "</span> 相關資料？
        </div>
        <div class="modal-footer border-top-0 justify-content-center">
          <button type="button" class="btn btn-secondary opacity-50" data-bs-dismiss="modal">取消</button>
          <button type="button" class="btn btn-primary" v-on:click="confirmDel(currentCompanyData)">確定</button>
        </div>
      </div>
    </div>
  </div>

  <!-- 新增 Dialog -->
  <div class="modal fade" id="addNewModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
    aria-labelledby="addNewModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title fw-bolder" id="staticBackdropLabel">
            {{ formStatus === 'addNew' ? '新增' : '編輯' }}公司資料
          </h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form v-on:submit.prevent method="post" enctype="multipart/form-data">
            <div class="container">
              <div class="row row-cols-1 m-3 mb-lg-0 data-item">
                <div class="col input__height">
                  <div class="row">
                    <label for="CompanyName" class="col-sm-12 col-md-3 col-form-label fw-bolder">公司名稱</label>
                    <div id="InputCompanyName" class="col-sm-12 col-md-9">
                      <input v-model="formData.CompanyName" type="text" class="form-control form-control-sm"
                        :class="{'is-invalid': isCompanyName}" id="CompanyName" maxlength="15"
                        v-on:focus="resetValidate('isCompanyName')"
                        v-on:blur="validateField('isCompanyName', formData.CompanyName)" v-on:keyup="checkText(formData.CompanyName)" autocomplete="off" />
                      <div class="invalid-feedback">
                        請輸入公司名稱
                      </div>
                    </div>
                  </div>
                </div>
                <div class="col input__height">
                  <div class="row">
                    <label for="ReceiptNo" class="col-sm-12 col-md-3 col-form-label fw-bolder">統一編號</label>
                    <div class="col-sm-12 col-md-9">
                      <input v-model="formData.ReceiptNo" type="text" class="form-control form-control-sm"
                        :class="{'is-invalid': isReceiptNo}" id="ReceiptNo" v-on:focus="resetValidate('isReceiptNo')"
                        v-on:blur="validateField('isReceiptNo', formData.ReceiptNo)" maxlength="10" />
                      <div class="invalid-feedback">
                        請輸入統一編號
                      </div>
                    </div>
                  </div>
                </div>
                <div class="col input__height">
                  <div class="row">
                    <label for="Phone" class="col-sm-12 col-md-3 col-form-label fw-bolder">電話</label>
                    <div class="col-sm-12 col-md-9">
                      <input v-model="formData.Phone" type="text" class="form-control form-control-sm"
                        :class="{'is-invalid': isPhone}" name="Phone" id="Phone" placeholder="Ex: 02-12345678"
                        maxlength="12" v-on:focus="resetValidate('isPhone')"
                        v-on:blur="validateField('isPhone', formData.Phone)" />
                      <div class="invalid-feedback">
                        請輸入電話
                      </div>
                    </div>
                  </div>
                </div>
                <div class="col input__height">
                  <div class="row">
                    <label for="Fax" class="col-sm-12 col-md-3 col-form-label fw-bolder">傳真</label>
                    <div class="col-sm-12 col-md-9">
                      <input v-model="formData.Fax" type="text" class="form-control form-control-sm" name="Fax" id="Fax"
                        placeholder="Ex: 02-87654321" maxlength="12" v-on:focus="resetValidate('isFax')"
                        v-on:blur="validateField('isFax', formData.Fax)" />
                    </div>
                  </div>
                </div>
                <div class="col input__height">
                  <div class="row">
                    <label for="UndertakerName" class="col-sm-12 col-md-3 col-form-label fw-bolder">負責人</label>
                    <div class="col-sm-12 col-md-9">
                      <input v-model="formData.UndertakerName" type="text" class="form-control form-control-sm"
                        :class="{'is-invalid': isUndertakerName}" id="UndertakerName"
                        v-on:focus="resetValidate('isUndertakerName')"
                        v-on:blur="validateField('isUndertakerName', formData.UndertakerName)" maxlength="10" />
                      <div class="invalid-feedback">
                        請輸入負責人姓名
                      </div>
                    </div>
                  </div>
                </div>
                <div class="col input__height">
                  <div class="row">
                    <label for="Addr" class="col-sm-12 col-md-3 col-form-label fw-bolder">地址</label>
                    <div class="col-sm-12 col-md-9">
                      <input v-model="formData.Addr" type="text" class="form-control form-control-sm"
                        :class="{'is-invalid': isAddr}" name="Addr" id="Addr" maxlength="30"
                        v-on:focus="resetValidate('isAddr')" v-on:blur="validateField('isAddr', formData.Addr)" />
                      <div class="invalid-feedback">
                        請輸入地址
                      </div>
                    </div>
                  </div>
                </div>
                <div class="col input__height">
                  <div class="row">
                    <label for="ContactEmail" class="col-sm-12 col-md-3 col-form-label fw-bolder">電子郵件</label>
                    <div class="col-sm-12 col-md-9">
                      <input v-model="formData.ContactEmail" type="text" class="form-control form-control-sm"
                        :class="{'is-invalid': isContactEmail}" name="ContactEmail" id="ContactEmail"
                        v-on:focus="resetValidate('isContactEmail')"
                        v-on:blur="validateField('isContactEmail', formData.ContactEmail);checkMail('isContactEmail', formData.ContactEmail)" />
                      <div class="invalid-feedback">
                        請輸入有效的電子郵件地址
                      </div>
                    </div>
                  </div>
                </div>
                <div class="col input__height">
                  <div class="row">
                    <label for="BelongToCompanyName"
                      class="col-sm-12 col-md-3 col-form-label fw-bolder">所屬起約方公司名稱</label>
                    <div id="addBelongToCompanyName" class="col-sm-12 col-md-9">
                      <input v-model="formData.BelongToCompanyName" type="text" class="form-control"
                        placeholder="可輸入關鍵字查詢公司名稱" id="BelongToCompanyName" autocomplete="off" />
                      <ul v-show="isInputOptionsOpen" class="list-group mb-3 shadow__card">
                        <li v-for="(result, index) in searchResults" :key="index"
                          class="list-group-item list-group-item-action" v-on:click="setResult(result, 'edit')"
                          :class="{'active': index === currentlyCounter}">
                          {{ result.CompanyName }}
                        </li>
                      </ul>
                    </div>
                  </div>
                </div>

                <div class="col input__height">
                  <div class="row">
                    <div class="col-md-6 mt-0">
                      <input v-model="formData.CreateContract" type="checkbox" class="form-check-input me-1"
                        id="CreateContract" name="CreateContract" :true-value="true" :false-value="false" />
                      <label class="form-check-label fw-bolder" for="CreateContract">
                        新增文件權限
                      </label>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
          <button type="button" class="btn btn-primary" v-on:click="saveHandler">確定</button>
        </div>
      </div>
    </div>
  </div>

  <!-- 訊息 Dialog -->
  <div class="modal fade" id="infoModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
    aria-labelledby="infoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-body text-center h5 fw-bolder pt-5">
          <div v-html="infoMsg"></div>
        </div>
        <div class="modal-footer border-top-0 justify-content-center">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
        </div>
      </div>
    </div>
  </div>

</div>
<script>
  var app = new Vue({
    el: '#organization',
    data: {
      isValidate: false,
      formStatus: 'addNew',
      /**
       * 廠商資料查詢表單
       * @@param {string} CompanyName 公司名稱
       * @@param {string} ReceiptNo 統一編號
       * @@param {string} Phone 電話
       * @@param {string} Fax 傳真
       * @@param {string} Addr 地址
       * @@param {string} ContactEmail 電子郵件
       * @@param {string} UndertakerName 負責人
       */
      searchFormData: {
        CompanyName: null,
        ReceiptNo: null,
        Phone: null,
        Fax: null,
        Addr: null,
        ContactEmail: null,
        UndertakerName: null,
      },
      // 編輯
      initialFormData: {
        CompanyName: null,
        ReceiptNo: null,
        Phone: null,
        Fax: null,
        Addr: null,
        ContactEmail: null,
        UndertakerName: null,
        CreateContract: null,
        BelongToCompanyName: null,
        BelongToCompany: null
      },
      formData: {},
      companyList: [],
      /** 分頁 options
       * totalRecordCount: 總筆數
       * pageSize: 每頁筆數
       * totalPages: 總頁數
       * page: 目前頁面
       */
      totalRecordCount: 0,
      pageSize: 10,
      page: 1,
      currentCompanyData: {},
      isCompanyName: false,
      isReceiptNo: false,
      isPhone: false,
      isFax: false,
      isUndertakerName: false,
      isContactEmail: false,
      isAddr: false,
      infoMsg: null,
      /**
       * Autocomplete
       */
      companyOptions: [],
      isSearchOptionsOpen: false,
      isInputOptionsOpen: false,
      searchResults: [],
      currentlyCounter: -1
    },
    watch: {
      // 檢查公司名稱輸入框的值，並執行Autocomplate
      'searchFormData.CompanyName'() {
        this.filterResults('search');
      },
      'formData.BelongToCompanyName'() {
        this.filterResults('edit');
      }
    },
    computed: {
      // 搜尋 email 輸入檢核
      searchMailCheck() {
        return this.mailValidate(this.searchFormData.ContactEmail);
      },
      // 計算總頁數
      totalPages() {
        const totalCount = Number.parseInt(this.totalRecordCount, 10);
        const pageSize = Number.parseInt(this.pageSize, 10);
        return Math.ceil(totalCount / pageSize);
      }
    },
    mounted() {
      // 編輯表單初始化
      this.init();

      // 進入本頁先查詢清單
      this.inquireData();

      const self = this;
      // 輸入框 click outside 時 AutoComplete 收起
      window.addEventListener('click', function (e) {
        const searchContainer = $('#searchCompanyName');
        const InputContainer = $('#InputCompanyName');
        // 查詢
        if (!searchContainer.is(e.target) &&
          !searchContainer.has(e.target).length
        ) {
          self.isSearchOptionsOpen = false;
        }
        // 新增
        if (!InputContainer.is(e.target) &&
          !InputContainer.has(e.target).length
        ) {
          self.isInputOptionsOpen = false;
        }
      });
    },
    methods: {
      init() {
        this.formData = JSON.parse(JSON.stringify(this.initialFormData));
      },

      // 新增 / 編輯 表單Modal
      editData(type, data) {
        this.formStatus = type;
        this.init();
        if (type === 'edit') {
          const restData = {
            CreateContract: data.CanCreateContract,
            BelongToCompany: data.CompanyBelongTo,
            BelongToCompanyName: data.NameOfCompanyBelongTo
          }
          this.formData = { ...this.formData, ...data, ...restData };
        }
        $('#addNewModal').modal('show');
      },

      // 開啟刪除Modal
      openDeleteDialog(item) {
        this.currentCompanyData = item;
        $("#deleteModal").modal('show');
      },
      // 刪除廠商資料串API
      confirmDel(companyData) {
        const { KeyID } = companyData;
        $("#deleteModal").modal('hide');

        showLoading();
        $.ajax({
          url: '@(Url.Action("VueDeleteItem", "Organization"))',
          data: JSON.stringify({ KeyID }),
          type: "POST",
          //dataType: "json",
          contentType: "application/json;charset=utf-8",
          success: function (res) {
            const { hasError, message, result, data } = res;
            hideLoading();
            if ($.isPlainObject(res)) {
              if (!hasError) {
                // 成功
                const filterCompanyList = app.companyList.filter(item => item.KeyID !== companyData.KeyID);
                app.companyList = filterCompanyList;
                app.infoMsg = `<div class="pb-2 text-success opacity-75" style="font-size: 4rem"><i class="far fa-check-circle"></i></div><div class="lh-base"><span class="text-primary opacity-75">" ${companyData.CompanyName} "</span> 資料已刪除</div>`;
              } else {
                app.infoMsg = `<div class="pb-2 text-danger opacity-75" style="font-size: 4rem"><i class="far fa-exclamation-circle"></i></div><div class="lh-base"> 刪除未完成，原因：${message} </div>`;
              }
              $('#infoModal').modal('show');
            } else {
              $(res).appendTo($('body')).remove();
            }
          },
          error: function (xhr, ajaxOptions, thrownError) {
            hideLoading();
            alertModal(thrownError);
            console.log(xhr.status);
            console.log(thrownError);
          }
        });
      },
      // 儲存表單
      saveHandler() {
        const { CompanyName, ReceiptNo, Phone, Fax, UndertakerName, ContactEmail, Addr, BelongToCompanyName, BelongToCompany } = this.formData;
        // 輸入欄位檢核
        this.isCompanyName = !CompanyName;
        this.isReceiptNo = !ReceiptNo;
        this.isPhone = !Phone;
        this.isFax = !Fax;
        this.isUndertakerName = !UndertakerName;
        this.isContactEmail = !ContactEmail;
        this.isAddr = !Addr;
        // 檢核email格式是否正確
        this.checkMail('isContactEmail', ContactEmail);

        // 檢核
        const isCompanyName = BelongToCompanyName && BelongToCompanyName !== '';
        if (isCompanyName && !BelongToCompany) {
          alertModal('<div class="pb-2 text-danger opacity-75" style="font-size: 4rem"><i class="far fa-exclamation-circle"></i></div><div class="lh-base"> 查無所屬起約方公司名稱！ </div>');
          return;
        }
        // 如果檢核通過，就會送出表單
        if (this.isCompanyName || this.isReceiptNo || this.isPhone /* || this.isFax */ || this.isUndertakerName || this.isContactEmail || this.isAddr) return;

        console.log('儲存表單');
        $('#addNewModal').modal('hide');

        var viewModel = this.formData;
        showLoading();
        $.ajax({
          url: '@(Url.Action("VueCommitItem", "Organization"))',
          data: JSON.stringify(viewModel),
          type: "POST",
          //dataType: "json",
          contentType: "application/json;charset=utf-8",
          success: function (res) {
            hideLoading();
            const { hasError, message, result, data } = res;
            if ($.isPlainObject(res)) {
              if (!hasError) {
                // 成功
                app.infoMsg = '<div class="pb-2 text-success opacity-75" style="font-size: 4rem"><i class="far fa-check-circle"></i></div><div class="lh-base">存檔完成！</div>';
                app.inquireData();
              } else {
                // 失敗
                app.infoMsg = `<div class="pb-2 text-danger opacity-75" style="font-size: 4rem"><i class="far fa-exclamation-circle"></i></div><div class="lh-base"> 存檔失敗，原因：${message} </div>`;
              }
              $('#infoModal').modal('show');
            } else {
              $('body').append($(res));
            }
          },
          error: function (xhr, ajaxOptions, thrownError) {
            hideLoading();
            alertModal(thrownError);
            console.log(xhr.status);
            console.log(thrownError);
          }
        });

      },
      // 查詢廠商資料
      inquireData() {
        // email欄位檢核沒過不送出表單
        if (this.searchMailCheck) return;

        // 表單資料
        this.page = 1;
        this.fetchAPI();
      },
      fetchAPI() {
        // 執行查詢合約列表
        const payload = {
          data: this.searchFormData,
          pageSize: this.pageSize,
          page: this.page
        }

        var viewModel = $.extend({
          PageSize: this.pageSize,
          PageIndex: this.page,
        }, this.searchFormData);

        fetchDataList(viewModel, '@(Url.Action("VueInquireData", "Organization"))');
      },

      // 重設查詢
      resetHandler() {
        this.searchFormData = JSON.parse(JSON.stringify(this.initialFormData));
        delete this.searchFormData.uuid;
      },

      // 查詢 email 欄位驗證
      mailValidate(value) {
        const emailRegex = /^[A-Za-z0-9._%+-]+@@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$/;
        const isEmail = !!value;
        const checkEmail = emailRegex.test(value);
        return isEmail && !checkEmail;
      },
      // 輸入 email 欄位驗證
      checkMail(status, contactEmail) {
        const emailRegex = /^[A-Za-z0-9._%+-]+@@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$/;
        const checkEmail = emailRegex.test(contactEmail);
        this[status] = !checkEmail;
      },
      // 欄位檢核
      validateField(status, data) {
        this[status] = !data;
      },
      // Reset 欄位檢核
      resetValidate(status) {
        this[status] = false;
      },
      // 設定每頁筆數
      resetPageSize() {
        // 重新查詢列表並回傳資料
        // 每次切換時，都要回到第1頁z
        this.page = 1;
        this.fetchAPI();
      },
      // 換頁
      changePage(page) {
        this.page = page;
        // 重新查詢列表並回傳資料
        this.fetchAPI();
      },
      // 第一頁
      firstPage() {
        this.page = 1;
        // 重新查詢列表並回傳資料
        this.fetchAPI();
      },
      // 前一頁
      previousPage() {
        const currentPage = Number.parseInt(this.page, 10);
        this.page = currentPage > 1 ? this.page - 1 : currentPage;
        // 重新查詢列表並回傳資料
        this.fetchAPI();
      },
      // 下一頁
      nextPage() {
        const currentPage = Number.parseInt(this.page, 10);
        this.page = currentPage < this.totalPages ? this.page + 1 : currentPage;
        // 重新查詢列表並回傳資料
        this.fetchAPI();
      },
      // 最後一頁
      lastPage() {
        this.page = this.totalPages;
        // 重新查詢列表並回傳資料
        this.fetchAPI();
      },
      /** 公司名稱 Autocomplate
       * 篩選出對應輸入框的清單
       */
      filterResults(type) {
        // 搜尋和輸入資料來源不同
        const inputValue = type === 'search' ? this.searchFormData.CompanyName : this.formData.BelongToCompanyName;
        // 顯示查詢結果列表
        this.searchResults = !inputValue ? [] : this.companyOptions.filter((item) => {
          return item.toLowerCase().indexOf(inputValue.toLowerCase()) > -1;
        });

        const self = this;
        const viewModel = {
          Term: inputValue
        };
        // 查詢公司列表
        fetchDataList(viewModel, '@(Url.Action("VueSearchCompany", "Home"))',
          function (dataItems) {
            app.searchResults = dataItems;
            if (type === 'search') {
              app.isSearchOptionsOpen = $.isArray(dataItems) && dataItems.length > 0;
            } else {
              self.isInputOptionsOpen = $.isArray(dataItems) && dataItems.length > 0;
            }
          }
        );
      },
      // 選取值後代入欄位
      setResult(result, type) {
        if (this.searchResults.length !== 0) {
          if (type === 'search') {
            this.searchFormData.CompanyName = result.CompanyName;
            this.searchFormData.ReceiptNo = result.ReceiptNo;
          }
          if (type === 'edit') {
            this.formData.BelongToCompanyName = result.CompanyName;
            this.formData.BelongToCompany = result.KeyID;
          }
          this.clearAll(type);
        }
      },
      // 還原初始化
      clearAll(type) {
        this.currentlyCounter = -1;
        this.$nextTick(() => {
          if (type === 'search') {
            this.isSearchOptionsOpen = false;
          }
          if (type === 'edit') {
            this.isInputOptionsOpen = false;
          }
        })
      },

      checkText(companyName) {
        this.formData.CompanyName = companyName.replace(/[^a-zA-Z0-9\u4E00-\u9FA5 ]/g, '');
      }
    }
  });
</script>
