@using System.IO
@using System.Linq.Expressions
@using Microsoft.AspNetCore.Mvc.ModelBinding

@using ContractHome.Helper
@using ContractHome.Controllers
@using ContractHome.Models.DataEntity
@using ContractHome.Models.ViewModel
@using CommonLib.Utility
@using Newtonsoft.Json
@{
  Layout = "~/Views/Shared/MasterPage.cshtml";

  ModelStateDictionary _modelState;
  ModelSource? models;

  models = (ModelSource?)ViewContext.HttpContext.Items["Models"];
  _modelState = (ModelStateDictionary)ViewBag.ModelState;
  QueryViewModel _viewModel = (QueryViewModel)ViewBag.ViewModel;

  _viewModel.UrlAction = Url.Action("InquireData", "Organization");
}
<div id="organization" class="container-lg py-5">
  <section class="queryform">
    <!-- 標題 -->
    @{
      // await Html.RenderPartialAsync("~/Views/Shared/Global/PageResource.cshtml");
      await Html.RenderPartialAsync("~/Views/SiteAction/FunctionTitleBar.cshtml", "公司資料維護");
      // await Html.RenderPartialAsync("~/Views/Common/Module/InquiryAgent.cshtml");
      // await Html.RenderPartialAsync("~/Views/Common/Module/InquiryAgentAction.cshtml");
    }

    <!-- 廠商資料維護搜尋-->
    <div class="card">
      <form v-on:submit.prevent method="post" enctype="multipart/form-data">
        <div class="container">
          <div class="row row-cols-1 row-cols-lg-2 row-cols-xl-3 m-3 mb-lg-0 data-item">
            <div class="col input__height">
              <div class="row">
                <label for="CompanyName" class="col-sm-12 col-md-3 col-form-label fw-bolder">公司名稱</label>
                <div id="searchCompanyName" class="col-sm-12 col-md-9">
                  <input v-model="searchFormData.CompanyName" type="text" class="form-control"
                    placeholder="可輸入關鍵字查詢公司名稱" id="CompanyName" autocomplete="off" />
                  <ul v-show="isSearchOptionsOpen" class="list-group mb-3 shadow__card">
                    <li v-for="(result, index) in searchResults" :key="index"
                      class="list-group-item list-group-item-action" v-on:click="setResult(result, 'search')"
                      :class="{'active': index === currentlyCounter}">
                      {{ result.CompanyName }}
                    </li>
                  </ul>
                </div>
              </div>
            </div>
            <div class="col input__height">
              <div class="row">
                <label for="ReceiptNo" class="col-sm-12 col-md-3 col-form-label fw-bolder">統一編號</label>
                <div class="col-sm-12 col-md-9">
                  <input v-model="searchFormData.ReceiptNo" type="text" class="form-control" name="ReceiptNo"
                    id="ReceiptNo" />
                </div>
              </div>
            </div>
            <div class="col input__height">
              <div class="row">
                <label for="Phone" class="col-sm-12 col-md-3 col-form-label fw-bolder">電話</label>
                <div class="col-sm-12 col-md-9">
                  <input v-model="searchFormData.Phone" type="text" class="form-control" name="Phone" id="Phone" />
                </div>
              </div>
            </div>
            <div class="col input__height">
              <div class="row">
                <label for="Fax" class="col-sm-12 col-md-3 col-form-label fw-bolder">傳真</label>
                <div class="col-sm-12 col-md-9">
                  <input v-model="searchFormData.Fax" type="text" class="form-control" name="Fax" id="Fax" />
                </div>
              </div>
            </div>
            <div class="col input__height">
              <div class="row">
                <label for="Addr" class="col-sm-12 col-md-3 col-form-label fw-bolder">地址</label>
                <div class="col-sm-12 col-md-9">
                  <input v-model="searchFormData.Addr" type="text" class="form-control" name="Addr" id="Addr" />
                </div>
              </div>
            </div>
            <div class="col input__height">
              <div class="row">
                <label for="ContactEmail" class="col-sm-12 col-md-3 col-form-label fw-bolder">電子郵件</label>
                <div class="col-sm-12 col-md-9">
                  <input v-model="searchFormData.ContactEmail" type="text" class="form-control"
                    :class="{'is-invalid': searchMailCheck }" name="ContactEmail" id="ContactEmail" />
                  <div class="invalid-feedback">
                    請輸入有效的電子郵件地址
                  </div>
                </div>
              </div>
            </div>
            <div class="col input__height">
              <div class="row">
                <label for="UndertakerName" class="col-sm-12 col-md-3 col-form-label fw-bolder">負責人</label>
                <div class="col-sm-12 col-md-9">
                  <input v-model="searchFormData.UndertakerName" type="text" class="form-control" name="UndertakerName"
                    id="UndertakerName" />
                </div>
              </div>
            </div>
          </div>
        </div>
      </form>
    </div>
    <div class="row">
      <div class="col-12 hstack gap-3 py-3">
        <div>
          <button type="button" data-bs-toggle="tooltip" data-bs-placement="top" title="新增廠商資料"
            class="btn btn-lg btn-success rounded-pill opacity-75" v-on:click="editData('addNew')">
            <i class="fal fa-file-plus"></i>
          </button>
        </div>
        <div class="ms-auto">
          <button type="button" class="btn btn-secondary opacity-75" v-on:click="resetHandler">重設</button>
        </div>
        <div>
          <button type="button" class="btn btn-primary" v-on:click="inquireData"
            :disabled="this.searchMailCheck">查詢</button>
        </div>
      </div>
    </div>
  </section>

  <!-- 廠商資料查詢列表 -->
  <section>
    <!-- 標題 -->
    @{
      await Html.RenderPartialAsync("~/Views/SiteAction/FunctionTitleBar.cshtml", "廠商列表");
    }
    <div v-if="companyList.length > 0">
      <div class="card p-2 mb-3 table-responsive">
        <table class="table table-hover mb-0">
          <thead>
            <tr>
              <th scope="col">公司名稱</th>
              <th scope="col">統一編號</th>
              <th scope="col">電話</th>
              <th scope="col">傳真</th>
              <th scope="col">地址</th>
              <th scope="col">電子郵件</th>
              <th scope="col">負責人</th>
              <th scope="col"></th>
            </tr>
          </thead>
          <tbody>
            <tr v-for="(company, index) in companyList" :key="`c_${index}`">
              <td class="text-nowrap">{{ company.CompanyName }}</td>
              <td class="text-nowrap">{{ company.ReceiptNo }}</td>
              <td>{{ company.Phone }}</td>
              <td>{{ company.Fax }}</td>
              <td>{{ company.Addr }}</td>
              <td>{{ company.ContactEmail }}</td>
              <td class="text-nowrap">{{ company.UndertakerName }}</td>
              <td class="text-nowrap text-center">
                <!-- 編輯 -->
                <span data-bs-toggle="tooltip" data-bs-placement="top" title="修改" class="d-inline-block mx-1">
                  <button type="button" class="btn btn-sm btn-primary opacity-75 rounded-pill icon__rounded"
                    v-on:click="editData('edit', company)">
                    <i class="fal fa-edit"></i>
                  </button>
                </span>
                <!-- 刪除 -->
                <span data-bs-toggle="tooltip" data-bs-placement="top" title="刪除" class="d-inline-block mx-1">
                  <button type="button" id="deleteCompany"
                    class="btn btn-sm btn-danger opacity-75 rounded-pill icon__rounded"
                    v-on:click="openDeleteDialog(company)">
                    <i class="fal fa-trash-alt"></i>
                  </button>
                </span>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
      <!-- 分頁模組 -->
      <div class="row g-3 align-items-center justify-content-between">
        <div class="col-auto">
          <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center mb-0">
              <!-- 第一頁 -->
              <li class=" page-item" :class="{'disabled' : page === 1}">
                <a class="page-link" v-on:click="firstPage">
                  <i class="far fa-step-backward"></i>
                </a>
              </li>
              <!-- 前一頁 -->
              <li class=" page-item" :class="{'disabled' : page === 1}">
                <a class="page-link" v-on:click="previousPage">
                  <i class="fal fa-chevron-left"></i>
                </a>
              </li>
              <!-- 頁面列表 -->
              <li v-for="n in totalPages" :key="n" :v-model="page" class="page-item" :class="{'active' : page === n}">
                <a class="page-link" v-on:click="changePage(n)">{{ n }}</a>
              </li>
              <!-- 下一頁 -->
              <li class="page-item" :class="{'disabled' : page === totalPages}">
                <a class="page-link" v-on:click="nextPage">
                  <i class="fal fa-chevron-right"></i>
                </a>
              </li>
              <!-- 最後一頁 -->
              <li class="page-item" :class="{'disabled' : page === totalPages}">
                <a class="page-link" v-on:click="lastPage">
                  <i class="far fa-step-forward"></i>
                </a>
              </li>
            </ul>
          </nav>
        </div>
        <div class="col-auto">
          <div class="row g-3 align-items-center">
            <div class="col-auto">
              <label for="PageSize">每頁筆數：</label>
            </div>
            <div class="col-auto">
              <select v-model="pageSize" class="form-select form-control-sm" name="PageSize" id="PageSize"
                v-on:change="resetPageSize">
                <option>10</option>
                <option>30</option>
                <option>50</option>
                <option>100</option>
                <option>200</option>
              </select>
            </div>
            <div class="col-auto">
              共 {{ totalPages }} 頁，{{ totalRecordCount }} 筆
            </div>
          </div>
        </div>
      </div>
    </div>
    <div v-else class="card p-3 text-center">
      <span class="text-danger opacity-50" style="font-size: 50px;">
        <i class="fal fa-box-full"></i>
      </span>
      <span class="text-primary">目前尚無廠商資料</span>
    </div>
  </section>

  <!-- 刪除 Dialog -->
  <div class="modal fade" id="deleteModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
    aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered ">
      <div class="modal-content">
        <div class="modal-header border-bottom-0">
          <h5 class="modal-title" id="staticBackdropLabel"></h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body text-center h5 fw-bolder">
          確定刪除 <span class="text-primary opacity-75">" {{ currentCompanyData.CompanyName }} "</span> 相關資料？
        </div>
        <div class="modal-footer border-top-0 justify-content-center">
          <button type="button" class="btn btn-secondary opacity-50" data-bs-dismiss="modal">取消</button>
          <button type="button" class="btn btn-primary" v-on:click="confirmDel(currentCompanyData)">確定</button>
        </div>
      </div>
    </div>
  </div>

  <!-- 新增 Dialog -->
  <div class="modal fade" id="addNewModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
    aria-labelledby="addNewModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title fw-bolder" id="staticBackdropLabel">{{ editTitle }}廠商資料</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form v-on:submit.prevent method="post" enctype="multipart/form-data">
            <div class="container">
              <div class="row row-cols-1 m-3 mb-lg-0 data-item">
                <div class="col input__height">
                  <div class="row">
                    <label for="CompanyName" class="col-sm-12 col-md-3 col-form-label fw-bolder">公司名稱</label>
                    <div id="InputCompanyName" class="col-sm-12 col-md-9">
                      <input v-model="formData.CompanyName" type="text" class="form-control form-control-sm"
                        :class="{'is-invalid': isCompanyName}" id="CompanyName"
                        v-on:focus="resetValidate('isCompanyName')"
                        v-on:blur="validateField('isCompanyName', formData.CompanyName)" autocomplete="off" />
                      <ul v-show="isInputOptionsOpen" class="list-group mb-3 shadow__card">
                        <li v-for="(result, index) in searchResults" :key="index"
                          class="list-group-item list-group-item-action" v-on:click="setResult(result, 'edit')"
                          :class="{'active': index === currentlyCounter}">
                          {{ result }}
                        </li>
                      </ul>
                      <div class="invalid-feedback">
                        請輸入公司名稱
                      </div>
                    </div>
                  </div>
                </div>
                <div class="col input__height">
                  <div class="row">
                    <label for="ReceiptNo" class="col-sm-12 col-md-3 col-form-label fw-bolder">統一編號</label>
                    <div class="col-sm-12 col-md-9">
                      <input v-model="formData.ReceiptNo" type="text" class="form-control form-control-sm"
                        :class="{'is-invalid': isReceiptNo}" id="ReceiptNo" v-on:focus="resetValidate('isReceiptNo')"
                        v-on:blur="validateField('isReceiptNo', formData.ReceiptNo)" />
                      <div class="invalid-feedback">
                        請輸入統一編號
                      </div>
                    </div>
                  </div>
                </div>
                <div class="col input__height">
                  <div class="row">
                    <label for="Phone" class="col-sm-12 col-md-3 col-form-label fw-bolder">電話</label>
                    <div class="col-sm-12 col-md-9">
                      <input v-model="formData.Phone" type="text" class="form-control form-control-sm"
                        :class="{'is-invalid': isPhone}" name="Phone" id="Phone" v-on:focus="resetValidate('isPhone')"
                        v-on:blur="validateField('isPhone', formData.Phone)" />
                      <div class="invalid-feedback">
                        請輸入電話
                      </div>
                    </div>
                  </div>
                </div>
                <div class="col input__height">
                  <div class="row">
                    <label for="Fax" class="col-sm-12 col-md-3 col-form-label fw-bolder">傳真</label>
                    <div class="col-sm-12 col-md-9">
                      <input v-model="formData.Fax" type="text" class="form-control form-control-sm"
                        :class="{'is-invalid': isFax}" name="Fax" id="Fax" v-on:focus="resetValidate('isFax')"
                        v-on:blur="validateField('isFax', formData.Fax)" />
                      <div class="invalid-feedback">
                        請輸入傳真號碼
                      </div>
                    </div>
                  </div>
                </div>
                <div class="col input__height">
                  <div class="row">
                    <label for="UndertakerName" class="col-sm-12 col-md-3 col-form-label fw-bolder">負責人</label>
                    <div class="col-sm-12 col-md-9">
                      <input v-model="formData.UndertakerName" type="text" class="form-control form-control-sm"
                        :class="{'is-invalid': isUndertakerName}" id="UndertakerName"
                        v-on:focus="resetValidate('isUndertakerName')"
                        v-on:blur="validateField('isUndertakerName', formData.UndertakerName)" />
                      <div class="invalid-feedback">
                        請輸入負責人姓名
                      </div>
                    </div>
                  </div>
                </div>
                <div class="col input__height">
                  <div class="row">
                    <label for="ContactEmail" class="col-sm-12 col-md-3 col-form-label fw-bolder">電子郵件</label>
                    <div class="col-sm-12 col-md-9">
                      <input v-model="formData.ContactEmail" type="text" class="form-control form-control-sm"
                        :class="{'is-invalid': isContactEmail}" name="ContactEmail" id="ContactEmail"
                        v-on:focus="resetValidate('isContactEmail')"
                        v-on:blur="validateField('isContactEmail', formData.ContactEmail);checkMail('isContactEmail', formData.ContactEmail)" />
                      <div class="invalid-feedback">
                        請輸入有效的電子郵件地址
                      </div>
                    </div>
                  </div>
                </div>
                <div class="col input__height">
                  <div class="row">
                    <label for="Addr" class="col-sm-12 col-md-3 col-form-label fw-bolder">地址</label>
                    <div class="col-sm-12 col-md-9">
                      <input v-model="formData.Addr" type="text" class="form-control form-control-sm"
                        :class="{'is-invalid': isAddr}" name="Addr" id="Addr" v-on:focus="resetValidate('isAddr')"
                        v-on:blur="validateField('isAddr', formData.Addr)" />
                      <div class="invalid-feedback">
                        請輸入地址
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
          <button type="button" class="btn btn-primary" v-on:click="saveHandler">確定</button>
        </div>
      </div>
    </div>
  </div>

  <!-- 訊息 Dialog -->
  <div class="modal fade" id="infoModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
    aria-labelledby="infoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-body text-center h5 fw-bolder pt-5">
          <div class="pb-2 text-success opacity-75" style="font-size: 4rem"><i class="far fa-check-circle"></i></div>
          <div v-html="infoMsg"></div>
        </div>
        <div class="modal-footer border-top-0 justify-content-center">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
        </div>
      </div>
    </div>
  </div>

</div>
<script>
  // Fake company Data
  const companyOptions = [
    'Option 1',
    'Option 111',
    'Option 11',
    'Option 22',
    'Option 2',
    'Option 3',
  ];

  // 廠商列表
  @*const companyList = [
    {
    uuid: '111',
    CompanyName: '網際優勢甲方公司',
    ReceiptNo: '12345678',
    Phone: '02-12345678',
    Fax: '02-12345679',
    Addr: '台北市中正區南海路20號6樓',
    ContactEmail: 'David@uxb2b.com',
    UndertakerName: '劉大衛'
    },
    {
    uuid: '222',
    CompanyName: '網際優勢乙方公司',
    ReceiptNo: '87654321',
    Phone: '02-12345678',
    Fax: '02-12345679',
    Addr: '台北市中正區杭州南路120號8樓',
    ContactEmail: 'wang@uxb2b.com',
    UndertakerName: '王大衛'
    },
    {
    uuid: '333',
    CompanyName: '網際優勢丙方公司',
    ReceiptNo: '85214788',
    Phone: '02-12345678',
    Fax: '02-12345679',
    Addr: '台北市中正區羅斯福路200號6樓之一',
    ContactEmail: 'lin@uxb2b.com',
    UndertakerName: '林大衛'
    },
    ];*@
  const companyList = [];

  var app = new Vue({
    el: '#organization',
    data: {
      isValidate: false,
      /**
       * 廠商資料查詢表單
       * @@param {string} CompanyName 公司名稱
       * @@param {string} ReceiptNo 統一編號
       * @@param {string} Phone 電話
       * @@param {string} Fax 傳真
       * @@param {string} Addr 地址
       * @@param {string} ContactEmail 電子郵件
       * @@param {string} UndertakerName 負責人
       */
      searchFormData: {
        CompanyName: null,
        ReceiptNo: null,
        Phone: null,
        Fax: null,
        Addr: null,
        ContactEmail: null,
        UndertakerName: null,
      },
      // 編輯
      initialFormData: {
        uuid: null,
        CompanyName: null,
        ReceiptNo: null,
        Phone: null,
        Fax: null,
        Addr: null,
        ContactEmail: null,
        UndertakerName: null,
      },
      formData: {
        CompanyName: null,
      },
      companyList,
      /** 分頁 options
       * totalRecordCount: 總筆數
       * pageSize: 每頁筆數
       * totalPages: 總頁數
       * page: 目前頁面
       */
      totalRecordCount: 0,
      pageSize: 10,
      page: 1,
      currentCompanyData: {},
      editTitle: null,
      isCompanyName: false,
      isReceiptNo: false,
      isPhone: false,
      isFax: false,
      isUndertakerName: false,
      isContactEmail: false,
      isAddr: false,
      infoMsg: null,
      /**
       * Autocomplete
       */
      companyOptions,
      isSearchOptionsOpen: false,
      isInputOptionsOpen: false,
      searchResults: [],
      currentlyCounter: -1
    },
    watch: {
      // 檢查公司名稱輸入框的值，並執行Autocomplate
      'searchFormData.CompanyName'() {
        this.filterResults('search');
      },
      'formData.CompanyName'() {
        this.filterResults('edit');
      }
    },
    computed: {
      // 搜尋 email 輸入檢核
      searchMailCheck() {
        return this.mailValidate(this.searchFormData.ContactEmail);
      },
      // 計算總頁數
      totalPages() {
        const totalCount = Number.parseInt(this.totalRecordCount, 10);
        const pageSize = Number.parseInt(this.pageSize, 10);
        return Math.ceil(totalCount / pageSize);
      }
    },
    mounted() {
      const self = this;
      // 輸入框 click outside 時 AutoComplete 收起
      window.addEventListener('click', function (e) {
        const searchContainer = $('#searchCompanyName');
        const InputContainer = $('#InputCompanyName');
        // 查詢
        if (!searchContainer.is(e.target) &&
          !searchContainer.has(e.target).length
        ) {
          self.isSearchOptionsOpen = false;
        }
        // 新增
        if (!InputContainer.is(e.target) &&
          !InputContainer.has(e.target).length
        ) {
          self.isInputOptionsOpen = false;
        }
      });
    },
    methods: {
      // 新增 / 編輯 表單Modal
      editData(type, data) {
        $('#addNewModal').modal('show');
        const isNew = type === 'addNew';
        this.editTitle = isNew ? '新增' : '編輯';
        // 新增時加入一筆uuid
        this.formData.uuid = isNew ? ui_uuid() : this.formData.uuid;
        if (type === 'addNew') {
          this.formData = JSON.parse(JSON.stringify(this.initialFormData));
        }
        if (type === 'edit') {
          this.formData = data; //JSON.parse(JSON.stringify(data));
        }
      },
      // 開啟刪除Modal
      openDeleteDialog(item) {
        console.log('currentCompanyData:', item);
        this.currentCompanyData = item;
        $("#deleteModal").modal('show');
      },
      // 刪除廠商資料串API
      confirmDel(companyData) {
        console.log('companyData:', companyData);

        $("#deleteModal").modal('hide');

        // showLoading();
        // setTimeout(() => {
        //   // 模擬假資料被刪除
        //   // const filterCompanyList = this.companyList.filter(item => item.uuid !== companyData.uuid);
        //   // this.companyList = filterCompanyList;

        //   hideLoading();
        //   // 開啟訊息視窗
        //   this.infoMsg = `<span class='text-primary opacity-75'>" ${this.currentCompanyData.CompanyName} "</span> 資料已刪除`;
        //   $('#infoModal').modal('show');
        // }, 2000);

        var viewModel = companyData;

        showLoading();
        $.ajax({
          url: '@(Url.Action("VueDeleteItem", "Organization"))',
          data: JSON.stringify(viewModel),
          type: "POST",
          //dataType: "json",
          contentType: "application/json;charset=utf-8",
          success: function (data) {
            hideLoading();
            if ($.isPlainObject(data)) {
              if (data.result) {
                // alertModal('資料已刪除!!');
                const filterCompanyList = app.companyList.filter(item => item.KeyID !== companyData.KeyID);
                app.companyList = filterCompanyList;
                app.infoMsg = `<span class='text-primary opacity-75'>" ${companyData.CompanyName} "</span> 資料已刪除`;
                $('#infoModal').modal('show');
              } else {
                alertModal('刪除未完成，原因：' + data.message);
              }
            } else {
              $(data).appendTo($('body')).remove();
            }
          },
          error: function (xhr, ajaxOptions, thrownError) {
            hideLoading();
            alertModal(thrownError);
            console.log(xhr.status);
            console.log(thrownError);
          }
        });
      },
      // 儲存表單
      saveHandler() {
        // 輸入欄位檢核
        this.isCompanyName = !this.formData.CompanyName;
        this.isReceiptNo = !this.formData.ReceiptNo;
        this.isPhone = !this.formData.Phone;
        this.isFax = !this.formData.Fax;
        this.isUndertakerName = !this.formData.UndertakerName;
        this.isContactEmail = !this.formData.ContactEmail;
        this.isAddr = !this.formData.Addr;
        // 檢核email格式是否正確
        this.checkMail('isContactEmail', this.formData.ContactEmail);
        // 如果檢核通過，就會送出表單
        if (this.isCompanyName || this.isReceiptNo || this.isPhone /* || this.isFax */ || this.isUndertakerName || this.isContactEmail || this.isAddr) return;

        console.log('儲存表單');
        $('#addNewModal').modal('hide');
        // showLoading();
        // setTimeout(() => {
        //   hideLoading();
        //   // 開啟訊息視窗
        //   this.infoMsg = "存檔完成";
        //   $('#infoModal').modal('show');

        // }, 2000);

        var viewModel = this.formData;

  @* if (addNew) {
          delete $inquiryAgent.viewModel.EncKeyItem;
          delete $inquiryAgent.viewModel.KeyItem;
          } *@
          showLoading();
        $.ajax({
          url: '@(Url.Action("VueCommitItem", "Organization"))',
          data: JSON.stringify(viewModel),
          type: "POST",
          //dataType: "json",
          contentType: "application/json;charset=utf-8",
          success: function (data) {
            hideLoading();
            if ($.isPlainObject(data)) {
              if (data.result) {
                app.infoMsg = "存檔完成";
                $('#infoModal').modal('show');
                app.inquireData();
                // alertModal('存檔完成!!');
              } else {
                alertModal('存檔失敗，原因：' + data.message);
              }
            } else {
              $('body').append($(data));
            }
          },
          error: function (xhr, ajaxOptions, thrownError) {
            hideLoading();
            alertModal(thrownError);
            console.log(xhr.status);
            console.log(thrownError);
          }
        });

      },
      // 查詢廠商資料
      inquireData() {
        // email欄位檢核沒過不送出表單
        if (this.searchMailCheck) return;

        // 表單資料
        this.page = 1;
        this.fetchAPI();

        // var $tr = $tr || $(window.event.target).closest('form').find('div.data-item');
        // $inquiryAgent.viewModel.DataItem = $tr.find('input,select,textArea').serializeArray();
        // $inquiryAgent.inquire();
      },
      fetchAPI() {
        // 執行查詢合約列表
        const payload = {
          data: this.searchFormData,
          pageSize: this.pageSize,
          page: this.page
        }
        console.log('payload:', payload);

        var viewModel = $.extend({
          PageSize: this.pageSize,
          PageIndex: this.page,
        }, this.searchFormData);

        fetchDataList(viewModel, '@(Url.Action("VueInquireData", "Organization"))');
      },

      // 重設查詢
      resetHandler() {
        this.searchFormData = JSON.parse(JSON.stringify(this.initialFormData));
        delete this.searchFormData.uuid;
      },

      // 查詢 email 欄位驗證
      mailValidate(value) {
        const emailRegex = /^[A-Za-z0-9._%+-]+@@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$/;
        const isEmail = !!value;
        const checkEmail = emailRegex.test(value);
        return isEmail && !checkEmail;
      },
      // 輸入 email 欄位驗證
      checkMail(status, contactEmail) {
        const emailRegex = /^[A-Za-z0-9._%+-]+@@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$/;
        const checkEmail = emailRegex.test(contactEmail);
        this[status] = !checkEmail;
      },
      // 欄位檢核
      validateField(status, data) {
        this[status] = !data;
      },
      // Reset 欄位檢核
      resetValidate(status) {
        this[status] = false;
      },
      // 設定每頁筆數
      resetPageSize() {
        // 重新查詢列表並回傳資料
        // 每次切換時，都要回到第1頁z
        this.page = 1;
        this.fetchAPI();
      },
      // 換頁
      changePage(page) {
        this.page = page;
        // 重新查詢列表並回傳資料
        this.fetchAPI();
      },
      // 第一頁
      firstPage() {
        this.page = 1;
        // 重新查詢列表並回傳資料
        this.fetchAPI();
      },
      // 前一頁
      previousPage() {
        const currentPage = Number.parseInt(this.page, 10);
        this.page = currentPage > 1 ? this.page - 1 : currentPage;
        // 重新查詢列表並回傳資料
        this.fetchAPI();
      },
      // 下一頁
      nextPage() {
        const currentPage = Number.parseInt(this.page, 10);
        this.page = currentPage < this.totalPages ? this.page + 1 : currentPage;
        // 重新查詢列表並回傳資料
        this.fetchAPI();
      },
      // 最後一頁
      lastPage() {
        this.page = this.totalPages;
        // 重新查詢列表並回傳資料
        this.fetchAPI();
      },
      /** 公司名稱 Autocomplate
       * 篩選出對應輸入框的清單
       */
      filterResults(type) {
        // 搜尋和輸入資料來源不同
        const inputValue = type === 'search' ? this.searchFormData.CompanyName : this.formData.CompanyName;
        this.searchResults = !inputValue ? [] : this.companyOptions.filter((item) => {
          return item.toLowerCase().indexOf(inputValue.toLowerCase()) > -1;
        });
        if (type === 'search') {
          // this.isInputOptionsOpen = this.searchResults.length > 0;
          var viewModel = {
            Term: inputValue
          };

          fetchDataList(viewModel, '@(Url.Action("VueSearchCompany", "Home"))',
            function (dataItems) {
              app.searchResults = dataItems;
              app.isSearchOptionsOpen = $.isArray(dataItems) && dataItems.length > 0;
            });
        }
        if (type === 'edit') {
          this.isInputOptionsOpen = this.searchResults.length > 0;
        }
      },
      // 選取值後代入欄位
      setResult(result, type) {
        if (this.searchResults.length !== 0) {
          if (type === 'search') {
            this.searchFormData.CompanyName = result.CompanyName;
            this.searchFormData.ReceiptNo = result.ReceiptNo;
          }
          if (type === 'edit') {
            this.formData.CompanyName = result;
          }
          this.clearAll(type);
        }
      },
      // 還原初始化
      clearAll(type) {
        this.currentlyCounter = -1;
        this.$nextTick(() => {
          if (type === 'search') {
            this.isSearchOptionsOpen = false;
          }
          if (type === 'edit') {
            this.isInputOptionsOpen = false;
          }
        })
      }
    }
  });
  /**
  $inquiryAgent.showQueryResult = function (data) {
    var $tr = $('form div.data-item');
    $tr.empty().append($(data));
  }
  **/
</script>
