@using System.IO
@using System.Linq.Expressions
@using Microsoft.AspNetCore.Mvc.ModelBinding

@using ContractHome.Helper
@using ContractHome.Controllers
@using ContractHome.Models.DataEntity
@using ContractHome.Models.ViewModel
@using CommonLib.Utility
@using Newtonsoft.Json
@using System.Text.RegularExpressions

@{
  Layout = "~/Views/Shared/MasterPage.cshtml";

  ModelStateDictionary _modelState;
  ModelSource? models;
  Contract _model = (Contract)this.Model;

  models = (ModelSource?)ViewContext.HttpContext.Items["Models"];
  _modelState = (ModelStateDictionary)ViewBag.ModelState;
  QueryViewModel _viewModel = (QueryViewModel)ViewBag.ViewModel;

  var profile = await Context.GetUserAsync();
  var party = models!.GetTable<ContractingParty>()
                  .Where(p => p.ContractID == _model.ContractID)
                  .Where(p => models.GetTable<OrganizationUser>()
                  .Where(o => o.UID == profile.UID).Any(o => o.CompanyID == p.CompanyID))
                  .FirstOrDefault();

}
<div id="AffixPdfSealImage" class="container-fluid py-4 pb-3">
  <section>
    <!-- 標題 - 甲方 / 乙方 -->
    @{
      await Html.RenderPartialAsync("~/Views/Shared/Global/PageResource.cshtml");
      await Html.RenderPartialAsync("~/Views/SiteAction/FunctionTitleBar.cshtml",
      party == null
      ? "建立新合約"
      : party.IsInitiator == true
      ? "起約人用印" : "簽約人用印");
    }
    <div class="row" style="height: calc(100vh - 160px);">
      <!-- 合約影像檔 -->
      <div class="col col-xl-10 col-md-8 contract__wrapper">
        <div class="contract__arrow--left">
          <button type="button" data-bs-toggle="tooltip" data-bs-placement="top" title="上一頁"
            class="btn btn-lg btn-secondary rounded-pill opacity-50" onclick="commitData('prev')">
            <i class="fas fa-chevron-left"></i>
          </button>
        </div>
        <div class="card pdf__wrapper" style="height:fit-content;">
          @{
            await Html.RenderPartialAsync("~/Views/ContractConsole/Module/ShowContractImage.cshtml", _model);
          }
        </div>
        <div class="contract__arrow--right">
          <button type="button" data-bs-toggle="tooltip" data-bs-placement="top" title="下一頁"
            class="btn btn-lg btn-secondary rounded-pill opacity-50" onclick="commitData('next')">
            <i class="fas fa-chevron-right"></i>
          </button>
        </div>
      </div>
      <!-- 操作介面 -->
      <div class="col col-xl-2 col-md-4">
        @{
          <div id="toAffix" class="row ps-2 pe-4">
            <form method="post" enctype="multipart/form-data">
              @if (party == null || party.IsInitiator == true)
              {
                <div class="card p-3 mb-3">
                  <h5 class="h5 fw-bolder text-primary">Step 1：指定合約雙方</h5>
                  <div class="mb-2">
                    <label for="Initiator" class="form-label h6 text-secondary fw-bolder mb-1">起約方</label>
                    <select id="Initiator" name="Initiator" class="form-select form-select-sm" data-placeholder="請選擇">
                      <option></option>
                    </select>
                  </div>
                  <div>
                    <label for="Contractor" class="form-label h6 text-secondary fw-bolder mb-1">簽約方 (可複選)</label>
                    <select id="Contractor" name="Contractor" class="form-select form-select-sm" multiple
                      data-placeholder="請選擇">
                      <option></option>
                    </select>
                  </div>
                </div>
                <div class="card p-3 mb-3">
                  <h5 class="h5 fw-bolder text-primary">Step 2：文件審閱</h5>
                  <div class="pb-3">
                    <input class="form-check-input" type="checkbox" id="isInitiatorStamp" name="IgnoreSeal" value="True" />
                    <label class="form-check-label" for="isInitiatorStamp">
                      起約人：上傳合約已用印
                    </label>
                  </div>
                  @* <div>
              <input class="form-check-input" type="checkbox" id="isReject" disabled>
              <label class="form-check-label" for="isReject">
              簽約人：審閱後退回合約
              </label>
              </div> *@
                </div>
              }
              <div class="card p-3 mb-3">
                <h5 class="h5 fw-bolder text-primary">
                  @if (party == null || party.IsInitiator == true)
                  {
                    <text>Step 3：</text>
                  }
                  創建欄位
                </h5>
                <div class="pb-3">
                  <label class="form-label fw-bolder" for="PageIndex">選擇用印所在頁碼</label>
                  <select name="PageIndex" class="form-select form-select-sm">
                    <option value="0" selected="0">第 1 頁</option>
                    @for (int i = 0; i < GetPdfPageCount(_model); i++)
                    {
                      <option value="@(i)">第@(i + 1)頁</option>
                    }
                  </select>
                  <script>
                    $('select[name="PageIndex"]').on('change', function () {
                      loadContractPage($('select[name="PageIndex"]').val());
                    });
                  </script>
                </div>
                <div>
                  <button type="button" onclick="sealHandler()" class="btn btn-brown w-100">
                    <i class="fas fa-stamp"></i> 選擇印鑑
                  </button>
                </div>
              </div>
              <div class="row g-2 mt-2">
                <div class="col py-1">
                  <button type="button" onclick="resetSignature();" class="btn btn-secondary opacity-50 w-100">
                    <i class="far fa-times"></i> 清除用印
                  </button>
                </div>
                <div class="col py-1">
                  <button type="button" onclick="commitSignature(true)" class="btn btn-success opacity-75 w-100">
                    <i class="fas fa-file-pdf"></i> 預覽
                  </button>
                </div>
              </div>
              <div class="row g-2">
                <div class="col py-1">
                  <button type="button" onclick="abortContract();" class="btn btn-primary opacity-75 w-100">
                    <i class="far fa-share"></i> 退回合約
                  </button>
                </div>
                <div class="col py-1">
                  <button type="button" onclick="commitContract();" class="btn btn-primary opacity-75 w-100">
                    <i class="far fa-file-export"></i> 送出合約
                  </button>
                </div>
              </div>
              @*<div class="col-12 py-1">
            <button type="button" onclick="commitSignature();" class="btn btn-primary opacity-75 w-100">
            <i class="far fa-share"></i> 退回合約
            <i class="far fa-file-export"></i> 送出合約
            </button>
            </div>*@
            </form>
            <script>
              function commitSignature(preview) {
                clearErrors();
                $global.viewModel.Preview = preview;
                $global.viewModel.PageIndex = Number($('select[name="PageIndex"]').val());
                showLoading();
                $.post('@Html.Raw(Url.Action("CommitPdfSignature", "ContractConsole"))', $global.viewModel, function (data) {
                  hideLoading();
                  if ($.isPlainObject(data)) {
                    if (data.result) {
                      if (preview) {
                      } else {
                        alertModal('已用印完成!!');
                      }
                      loadContractPage($('select[name="PageIndex"]').val());
                      if ($global.currentSeal) {
                        $global.currentSeal.remove();
                      }
                      delete $global.viewModel.SealID;
                    } else {
                      alertModal(data.message);
                    }
                  } else {
                    $(data).appendTo($('body'));
                  }
                });
              }

              function resetSignature() {
                clearErrors();
                $global.viewModel.PageIndex = Number($('select[name="PageIndex"]').val());
                $('form').ajaxForm({
                  url: '@Html.Raw(Url.Action("ResetPdfSignature", "ContractConsole"))',
                  data: $global.viewModel,
                  beforeSubmit: function () {
                    showLoading();
                  },
                  success: function (data) {
                    hideLoading();
                    if ($.isPlainObject(data)) {
                      if (data.result) {
                        alertModal('已清除用印!!');
                        loadContractPage($('select[name="PageIndex"]').val());
                        if ($global.currentSeal) {
                          $global.currentSeal.remove();
                        }
                        delete $global.viewModel.SealID;
                      } else {
                        alertModal(data.message);
                      }
                    }
                    else {
                      $(data).appendTo($('body'));
                    }
                  },
                  error: function (xhr, ajaxOptions, thrownError) {
                    hideLoading();
                    console.log(xhr.status);
                    alertModal(thrownError);
                  }
                }).submit();
              }

              function loadContractPage(pageIndex) {
                showLoading();
                $.post('@Html.Raw(Url.Action("LoadContractPage", "ContractConsole"))', { 'KeyID': '@Html.Raw(_model!.ContractID.EncryptKey())', 'PageIndex': pageIndex }, function (data) {
                  hideLoading();
                  if ($.isPlainObject(data)) {
                    $('#contractImg').css(data);
                  } else {
                    $(data).appendTo($('body'));
                  }
                });
              }

              function abortContract() {
                if (!confirm('合約退回後，資料將被清除，確定退回？')) {
                  return;
                }
                showLoading();
                $.post('@Html.Raw(Url.Action("AbortContract", "ContractConsole"))', { 'KeyID': '@Html.Raw(_model!.ContractID.EncryptKey())' }, function (data) {
                  hideLoading();
                  if ($.isPlainObject(data)) {
                    if (data.result) {
                      alertModal('合約已退回!!');
                      window.location.href = '@(Url.Action("ListToStampIndex", "ContractConsole"))';
                    } else {
                      alertModal(data.message);
                    }
                    $('#contractImg').css(data);
                  } else {
                    $(data).appendTo($('body'));
                  }
                });
              }

              function commitContract() {
                $global.viewModel.IgnoreSeal = $('#isInitiatorStamp').is(':checked');
                showLoading();
                $.ajax({
                  type: 'POST',
                  url: '@(Url.Action(party==null || party.IsInitiator==true ? "CommitContract" : "AcceptContract", "ContractConsole"))',
                  data: JSON.stringify($global.viewModel),
                  type: "POST",
                  //dataType: "json",
                  contentType: "application/json;charset=utf-8",
                  success: function (data) {
                    hideLoading();
                    if ($.isPlainObject(data)) {
                      if (data.result) {
                        alertModal(`@(Html.Raw(party==null || party.IsInitiator==true ? "已建立新合約" : "合約已用印"))(${data.dataItem.contractNo})。`);
                        setTimeout(() => {
                          window.location.href = '@(Url.Action("ListToStampIndex", "ContractConsole"))';
                        }, 3000);
                      } else {
                        alertModal(data.message);
                      }
                    } else {
                      $(data).appendTo($('body'));
                    }
                  },
                  error: function (xhr, ajaxOptions, thrownError) {
                    hideLoading();
                    console.log(xhr.status);
                    console.log(thrownError);
                  }
                });
              }
            </script>
          </div>
        }
        <!-- 印章 Modal -->
        @* <div class="modal fade" id="sealModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
        aria-labelledby="sealModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg modal-dialog-scrollable">
        <div class="modal-content">
        <div class="modal-header border-bottom-0">
        <h5 class="modal-title fw-bolder" id="staticBackdropLabel">選擇印章</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
        <form method="post" enctype="multipart/form-data" class="pt-3 pb-5 text-center">
        <div class="row g-3">
        @for (int i = 0; i < 5; i++)
        {
        <div class="d-flex align-items-stretch col-md-3 col-sm-12" style="height: 150px;">
        <div class="card p-3 w-100 h-100 block--hover block--border" onclick="useSealHandler(@(i))">
        <div class="d-inline-flex h-100 w-100 justify-content-center align-items-center">
        <img id="frame" src="http://fakeimg.pl/300x250/?text=Seal" class="mh-100" />
        </div>
        <div
        class="btn btn-sm btn-danger opacity-75 rounded-pill icon__rounded operation__card block--show">
        <i class="fas fa-check"></i>
        </div>
        </div>
        </div>
        }
        <!-- 新增印鑑檔 -->
        <div class="d-flex align-items-stretch col-md-3 col-sm-12" style="height: 150px;">
        <label for="formFile" class="form-label w-100 h-100 mb-0">
        <div class="card justify-content-center align-items-center h-100 w-100 block--hover">
        <a class="btn btn-lg btn-success rounded-pill opacity-75">
        <i class="fal fa-file-plus"></i>
        </a>
        <span class="h6 fw-bolder p-2">新增印鑑檔</span>
        <input id="formFile" class="form-control" type="file" onchange="addSealHandler()">
        </div>
        </label>
        </div>
        </div>
        </form>
        </div>
        </div>
        </div>
        </div> *@
      </div>
    </div>
  </section>

  <!-- PDF 預覽 Dialog -->
  <div class="modal fade" id="pdfModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
    aria-labelledby="pdfModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title fw-bolder" id="staticBackdropLabel">合約預覽</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body pb-0">
          <!-- PDF 內嵌頁面 -->
          <div class="card pdf__wrapper">
            @{
              await Html.RenderPartialAsync("~/Views/ContractConsole/Module/ShowContractImage.cshtml", _model);
            }
          </div>
        </div>
        <div class="modal-footer border-top-0 justify-content-center">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  // 簽約人審閱後退回合約
  @*const isReject = document.querySelector('#isReject');
  var isReturnContract = false;
  isReject.addEventListener('change', (e) => {
    isReturnContract = e.target.checked;
    console.log({ isReturnContract });
  });*@

  @{
    var userOrgItems = models.GetTable<OrganizationUser>().Where(u => u.UID == profile.UID);
  }
  // 起約人資料清單
  const dataInitiator = @Html.Raw(userOrgItems.Select(u => new { id = u.CompanyID.EncryptKey(), text = u.Organization.CompanyName }).ToArray().JsonStringify());
  @*[
    { id: 0, text: '網際優勢甲方公司' },
    { id: 1, text: '網際優勢甲1方公司' },
    { id: 2, text: '網際優勢甲2方公司' },
    { id: 3, text: '網際優勢甲3方公司' },
    { id: 4, text: '網際優勢甲4方公司' },
    { id: 5, text: '網際優勢甲5方公司' }
    ];*@
    /** 起約人 select2 元件控制項
     * data: 下拉選單傳入資料,
     * theme: Bootstrap5 模版,
     * width: 寬度設定,
     * placeholder: placeholder設定,
     * selectionCssClass: select 選單樣式,
     * dropdownCssClass: 下拉選項樣式,
     */
    $('#Initiator').select2({
      data: dataInitiator,
      theme: "bootstrap-5",
      width: $(this).data('width') ? $(this).data('width') : $(this).hasClass('w-100') ? '100%' : 'style',
      placeholder: $(this).data('placeholder'),
      selectionCssClass: 'select2--small',
      dropdownCssClass: 'select2--small',
    });

  // 取得起約人選取資料
  $('#Initiator').on('select2:select', function (e) {
    // 取得當前選取項目資料
    var data = e.params.data;
    console.log(data);
    // 取得已選取項目陣列資料
    const selected = $('#Initiator').select2('data');
    console.log({ selected });
    delete $global.viewModel.Initiator;
    if (selected.length > 0) {
      $global.viewModel.Initiator = selected[0].id;
    }
  });

  // 簽約人資料清單
  const dataContractor = @Html.Raw(models.GetTable<Organization>().Where(o => !userOrgItems.Any(u => u.CompanyID == o.CompanyID)).Select(u => new { id = u.CompanyID.EncryptKey(), text = u.CompanyName }).ToArray().JsonStringify());
  @*[
    { id: 0, text: '網際優勢乙方公司' },
    { id: 1, text: '網際優勢丙方公司' },
    { id: 2, text: '網際優勢丁方公司' },
    { id: 3, text: '網際優勢戊方公司' },
    { id: 4, text: '網際優勢己方公司' },
    { id: 5, text: '網際優勢乙方公司' },
    { id: 6, text: '網際優勢丙方公司' },
    { id: 7, text: '網際優勢丁方公司' },
    { id: 8, text: '網際優勢戊方公司' },
    { id: 9, text: '網際優勢己方公司' }
    ];*@

    /** 簽約人 select2 元件控制項
     * data: 下拉選單傳入資料,
     * theme: Bootstrap5 模版,
     * width: 寬度設定,
     * placeholder: placeholder設定,
     * closeOnSelect: 選取後是否關閉選單,
     * selectionCssClass: select 選單樣式,
     * dropdownCssClass: 下拉選項樣式,
     * tags: 選取的選項以 tag 模式顯示,
     */
    $('#Contractor').select2({
      data: dataContractor,
      theme: "bootstrap-5",
      width: $(this).data('width') ? $(this).data('width') : $(this).hasClass('w-100') ? '100%' : 'style',
      placeholder: $(this).data('placeholder'),
      closeOnSelect: false,
      selectionCssClass: 'select2--small',
      dropdownCssClass: 'select2--small',
      tags: true
    });

  // 取得簽約人選取資料
  $('#Contractor').on('select2:select', function (e) {
    // 取得當前選取項目資料
    var data = e.params.data;
    console.log(data);
    // 取得已選取項目陣列資料
    const selected = $('#Contractor').select2('data');
    console.log({ selected });
    delete $global.viewModel.MultiContractorID;
    if (selected.length > 0) {
      $global.viewModel.MultiContractor = [];
      selected.forEach((element) => {
        $global.viewModel.MultiContractor.push(element.id);
      });
    }
  });

  // 開啟印鑑 Modal
  function sealHandler() {
    if ($('#sealModal').length > 0) {
      $('#sealModal').modal('show');
    } else {
      showLoading();
      $.ajax({
        type: 'POST',
        url: '@(Url.Action("ShowSealModal", "UserProfile"))',
        data: JSON.stringify({}),
        type: "POST",
        //dataType: "json",
        contentType: "application/json;charset=utf-8",
        success: function (data) {
          hideLoading();
          if ($.isPlainObject(data)) {
            if (data.result) {
            } else {
              alertModal(data.message);
            }
          } else {
            $(data).appendTo($('body'));
          }
        },
        error: function (xhr, ajaxOptions, thrownError) {
          hideLoading();
          console.log(xhr.status);
          console.log(thrownError);
        }
      });
    }
  }

  // 選擇印鑑
  function useSealHandler(sealID, id) {
    $('#sealModal').modal('hide');
  @*console.log('印鑑 index:', index);
      console.log('印鑑sealList:', sealList);*@

      $global.viewModel.SealID = sealID;
    $global.viewModel.SealScale = 100;
    // 產生一個虛擬 sealBox
    const sealBox = document.createElement("div");
    // id 動態產生
    const uuid = ui_uuid8();
    sealBox.id = uuid;
    sealBox.setAttribute('class', 'vmSeal');
    sealBox.setAttribute('style', 'top:42.5%;left:42.5%;');
    document.querySelector("#contractImg").appendChild(sealBox);
    // 產生印章並放到 sealBox
    const sealImg = document.createElement("img");
    sealImg.setAttribute('class', 'sealimg mw-100');
    sealImg.setAttribute('src', document.getElementById(id).getAttribute('src')); // 動態置入印鑑圖檔-來源 sealList
    document.querySelector(`#${uuid}`).appendChild(sealImg);
    // scale 模組
    const scaleBox = document.createElement("div");
    scaleBox.id = `scale-${uuid}`;
    scaleBox.setAttribute('class', 'vmScale');
    document.querySelector(`#${uuid}`).appendChild(scaleBox);
    // 刪除 模組
    const delBox = document.createElement("button");
    const textNode = document.createTextNode("x");
    delBox.id = `del-${uuid}`;
    delBox.setAttribute('class', 'btn btn-sm text-white rounded-pill icon__rounded vmDelete');
    delBox.appendChild(textNode);
    document.querySelector(`#${uuid}`).appendChild(delBox);

    // 跟著滑鼠移動
    const contractArea = document.querySelector("#contractImg");
    const seal = document.querySelector(`#${uuid}`);
    if ($global.currentSeal) {
      $global.currentSeal.remove();
    }
    $global.currentSeal = seal;
    seal.onmousedown = function (ev) {
      var oEvent = ev;
      // 阻擋瀏覽器的預設行為
      oEvent.preventDefault();
      var disX = oEvent.clientX - seal.offsetLeft;
      var disY = oEvent.clientY - seal.offsetTop;
      contractArea.onmousemove = function (ev) {
        oEvent = ev;
        oEvent.preventDefault();
        var x = oEvent.clientX - disX;
        var y = oEvent.clientY - disY;

        // 圖形移動時的邊界判斷-必須在文件內的範圍
        x = x <= 0 ? 0 : x;
        x = x >= contractArea.offsetWidth - seal.offsetWidth ? contractArea.offsetWidth - seal.offsetWidth : x;
        y = y <= 0 ? 0 : y;
        y = y >= contractArea.offsetHeight - seal.offsetHeight ? contractArea.offsetHeight - seal.offsetHeight : y;
        // console.log('x', x, 'y:', y);
        seal.style.left = x + 'px';
        seal.style.top = y + 'px';
        const MarginLeft = (x / 37.795).toFixed(2);
        const MarginTop = (y / 37.795).toFixed(2);
        console.log('mx-左邊界(cm):', MarginLeft);
        console.log('my-上邊界(cm):', MarginTop);
        $global.viewModel.MarginLeft = MarginLeft;
        $global.viewModel.MarginTop = MarginTop;
      }
      // 圖形移出文件範圍取消移動是,防止移動過快觸發滑鼠移出事件，導致滑鼠彈起事件失效
      contractArea.onmouseleave = function () {
        contractArea.onmousemove = null;
        contractArea.onmouseup = null;
      }
      // 署標彈起後停止移動
      contractArea.onmouseup = function () {
        contractArea.onmousemove = null;
        contractArea.onmouseup = null;
      }
    }
    // 圖片縮放效果
    const scale = document.querySelector(`#scale-${uuid}`);
    scale.onmousedown = function (e) {
      // 阻止冒泡,避免縮放時觸發移動事件
      e.stopPropagation();
      e.preventDefault();
      var pos = {
        'w': seal.offsetWidth,
        'h': seal.offsetHeight,
        'x': e.clientX,
        'y': e.clientY
      };
      contractArea.onmousemove = function (ev) {
        ev.preventDefault();
        // 設置圖片的最小縮放為30*30
        var w = Math.max(30, ev.clientX - pos.x + pos.w)
        var h = Math.max(30, ev.clientY - pos.y + pos.h)
        //console.log(w,h)

        // 設置圖片的最大寬高
        w = w >= contractArea.offsetWidth - seal.offsetLeft ? contractArea.offsetWidth - seal.offsetLeft : w
        h = h >= contractArea.offsetHeight - seal.offsetTop ? contractArea.offsetHeight - seal.offsetTop : h
        seal.style.width = w + 'px';
        seal.style.height = h + 'px';
        //console.log(seal.offsetWidth,seal.offsetHeight)
        var hScale = ((sealImg.width / sealImg.naturalWidth) * 100).toFixed(2);
        var vScale = ((sealImg.height / sealImg.naturalHeight) * 100).toFixed(2);
        console.log('圖片的寬的縮放比 %:', hScale);
        console.log('圖片的高的縮放比 %:', vScale);
        $global.viewModel.SealScale = Math.max(hScale, vScale);
      }
      contractArea.onmouseleave = function () {
        contractArea.onmousemove = null;
        contractArea.onmouseup = null;
      }
      contractArea.onmouseup = function () {
        contractArea.onmousemove = null;
        contractArea.onmouseup = null;
      }
    }

    // 刪除印鑑檔
    const deleteSeal = document.querySelector(`#del-${uuid}`);
    deleteSeal.onmousedown = function (e) {
      // 阻止冒泡,避免縮放時觸發移動事件
      e.stopPropagation();
      e.preventDefault();
      seal.remove();
      delete $global.viewModel.SealID;

      contractArea.onmouseleave = function () {
        contractArea.onmousemove = null;
        contractArea.onmouseup = null;
      }
      contractArea.onmouseup = function () {
        contractArea.onmousemove = null;
        contractArea.onmouseup = null;
      }
    }
  }

  // 新增印鑑檔
  let sealList = [];
  function addSealHandler() {
  @*const sealImg = URL.createObjectURL(event.target.files[0]);
      sealList.push(sealImg);*@
    var event = event || window.event;
    if (event.target.form != undefined) {
      $(event.target.form).ajaxForm({
        url: '@Html.Raw(Url.Action("CommitSealTemplate", "UserProfile"))',
        data: $global.viewModel,
        beforeSubmit: function () {
          showLoading();
        },
        success: function (data) {
          hideLoading();
          if ($.isPlainObject(data)) {
            if (data.result) {
            } else {
              alertModal(data.message);
            }
          }
          else {
            $(data).insertBefore($('#addSeal'));
          }
        },
        error: function (xhr, ajaxOptions, thrownError) {
          hideLoading();
          console.log(xhr.status);
          alertModal(thrownError);
        }
      }).submit();
    }
  }

  // 開啟預覽
  function openPdfModal() {
    $('#pdfModal').modal('show');
  };
</script>
@functions
{
  public int GetPdfPageCount(Contract attachment)
  {
    if (attachment == null || !File.Exists(attachment.FilePath))
    {
      return 0;
    }

    var content = File.ReadAllText(attachment.FilePath);
    var match = Regex.Match(content, "/Count(?([^\\r\\n])\\s)\\d+");
    if (match.Value != String.Empty)
    {
      return int.Parse(match.Value.Substring(7));
    }
    return 0;
  }
}
